@model Portal.Models.PersonalityEditModel

<!--Блок добавления\редактирования работника-->
<div class="panel panel-default panel-default-person modalPersonWidth"  id="personTable" style="margin-bottom:0px">
    <!--Выпадающий список состояний работника-->
    <div class="titlePersontable">
        <h3>Данные пользователя</h3>

        <select required class="inputPersonData actual">
        @if (Model.Personality == null || Model.Personality.Actual == 1)
        {
            <option value="1"  selected class="optionForColor">Активен</option>
            <option value="2" class="optionForColor">Отстранен</option>
            <option value="0" class="optionForColor">Уволен</option>
        }
        else if(Model.Personality.Actual == 2)
        {
            <option value="1" class="optionForColor">Активен</option>
            <option value="2" selected class="optionForColor">Отстранен</option>
            <option value="0" class="optionForColor">Уволен</option>
        }
        else
        {
            <option value="1" class="optionForColor">Активен</option>
            <option value="2" class="optionForColor">Отстранен</option>
            <option value="0" selected class="optionForColor">Уволен</option>
        }
        </select>

    </div> 
        <hr>
    <!--Наполнение данных, если они есть-->
    <div class="personData">
        <!--Первый столбец-->
        @if(Model.Personality != null)
        {   
            <form id="user-form">
                <div class="leftBlockPersonData">
                    <label class="label-light">Фамилия</label>
                    <input required type="text" class="inputPersonData" placeholder="Введите фамилию" id="surnamePerson" value="@Model.Personality.Surname">
                    <label class="label-light">Имя</label>
                    <input required type="text" class="inputPersonData" placeholder="Введите имя" id="namePerson" value="@Model.Personality.Name">
                    <label class="label-light">Отчество</label>
                    <input required type="text" class="inputPersonData" placeholder="Введите отчество" id="patronymicPerson" value="@Model.Personality.Patronymic">
                    <label class="label-light">Дата рождения</label>
                    <input required type="date" class="inputPersonData" id="birthDatePerson" value="@Model.Personality.BirthDate.ToString("yyyy-MM-dd")">
                    <label class="label-light">Должность</label>
                    <input required type="hidden" id="personGUID" value="@Model.Personality.Guid">

                    @* Выбор должности *@
                    <div style="width:100%; float:left; max-height:500px; overflow-y:auto">
                        <select required id="jobTitlePerson" class="inputPersonData" data-width="100%" value="@Model.Personality.JobTitle.Name">
                            @foreach (var jobTitle in Model.JobTitles.OrderBy(g => g.Name))
                            {
                                if (Model.JobTitles.FirstOrDefault(g => g.Guid == jobTitle.Guid) != null)
                                {
                                    <option value="@jobTitle.Guid">@jobTitle.Name</option>
                                }
                                else
                                {
                                    <option value="@jobTitle.Guid">@jobTitle.Name</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                
                <div class="rightBlockPersonData">
                    <label class="label-light">ТТ</label>
                    @* Выбор ТТ *@
                    <div style="width:100%; float:left; max-height:500px; overflow-y:auto">
                        <select required id="TTPerson" class="inputPersonData" data-width="100%" value="@Model.Personality.Location.Name">

                            <option value="@Model.Personality.Location.Guid">@Model.Personality.Location.Name</option>

                            @foreach (var location in Model.Locations.OrderBy(g => g.Name))
                            {
                                    <option value="@location.Guid">@location.Name</option>
                            }
                        </select>
                    </div>

                    <label class="label-light">Дата приема на работу</label>
                    <input required type="date" class="inputPersonData" id="HireDate" value="@Model.Personality.HireDate.ToString("yyyy-MM-dd")">
                    <label class="label-light">Дата увольнения</label>
                    <input type="date" class="inputPersonData dissDate" id="DismissalsDate" value="@Model.Personality.DismissalsDate?.ToString("yyyy-MM-dd")">
                    <label class="label-light">Смена</label>
                    
                    @* Выбор смены *@
                    <div style="width:100%; float:left; max-height:500px; overflow-y:auto">
                        <select required id="ScheduleGUID" class="inputPersonData" data-width="100%" value="@Model.Personality.Schedule.Name">
                            @foreach (var schedule in Model.Schedules.OrderBy(g => g.Name))
                            {
                                if (Model.Schedules.FirstOrDefault(g => g.Guid == schedule.Guid) != null)
                                {
                                    <option selected="selected" value="@schedule.Guid">@schedule.Name</option>
                                }
                                else
                                {   
                                    <option value="@schedule.Guid">@schedule.Name</option>
                                }
                            }
                        </select>
                    </div>

                    <label class="label-light">Юр. лицо</label>
                    <input required type="text" class="inputPersonData" id="">
                </div>

                <div class='rightBlockPersonData'>
                    <label class="label-light">Юр. лицо разнесения затрат</label>
                    <input required type="text" class="inputPersonData" id="">

                    <label class="label-light">Период действия версии</label>
                    <div class='rightBlockPersonData__versions'>
                        <label class="label-light">С</label>
                        <div>
                            <input required type="datetime-local" class="inputPersonData correctForData" id="">
                        </div>
                        <label class="label-light">По</label>
                        <div>
                            <input type="datetime-local" class="inputPersonData correctForData" id="">
                        </div>
                    </div>

                    <div class="buttonAddPerson">
                        <button class="buttonAddPersonData" type="submit">СОХРАНИТЬ</button>
                        <button class="buttonAddPersonData buttonClearPersonData" onclick="clearInputs()">ОЧИСТИТЬ</button>
                    </div>
                </div>
            </form>
        }
        else
        {
            <form id="user-form">
                <div class="leftBlockPersonData">
                    <label class="label-light">Фамилия</label>
                    <input required type="text" class="inputPersonData" placeholder="Введите фамилию" id="surnamePerson">
                    <label class="label-light">Имя</label>
                    <input required type="text" class="inputPersonData" placeholder="Введите имя" id="namePerson">               
                    <label class="label-light">Отчество</label>
                    <input required type="text" class="inputPersonData" placeholder="Введите отчество" id="patronymicPerson" >
                    <label class="label-light">Дата рождения</label>
                    <input required type="date" class="inputPersonData" id="birthDatePerson">
                    <label class="label-light">Должность</label>
                    <input required type="hidden" id="personGUID" value="0">

                    @* Выбор должности *@
                    <div style="width:100%; float:left; max-height:500px; overflow-y:auto">
                        <select required id="jobTitlePerson" class="inputPersonData" data-width="100%">
                            @foreach (var jobTitle in Model.JobTitles.OrderBy(g => g.Name))
                            {
                                if (Model.JobTitles.FirstOrDefault(g => g.Guid == jobTitle.Guid) != null)
                                {
                                    <option value="@jobTitle.Guid">@jobTitle.Name</option>
                                }
                                else
                                {
                                    <option value="@jobTitle.Guid">@jobTitle.Name</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                
                <div class="rightBlockPersonData">
                    <label class="label-light">ТТ</label>
                    @* Выбор ТТ *@
                    <div style="width:100%; float:left; max-height:500px; overflow-y:auto">
                        <select required id="TTPerson" class="inputPersonData" data-width="100%">
                            @foreach (var location in Model.Locations.OrderBy(g => g.Name))
                            {
                                if (Model.Locations.FirstOrDefault(g => g.Guid == location.Guid) != null)
                                {
                                    <option selected="selected" value="@location.Guid">@location.Name</option>
                                }
                                else
                                {
                                    <option value="@location.Guid">@location.Name</option>
                                }
                            }
                        </select>
                    </div>

                    <label class="label-light">Дата приема на работу</label>
                    <input required type="date" class="inputPersonData" id="HireDate">
                    <label class="label-light">Дата увольнения</label>
                    <input type="date" class="inputPersonData dissDate" id="DismissalsDate">
                    <label class="label-light">Смена</label>
                    @* Выбор смены *@
                    <div style="width:100%; float:left; max-height:500px; overflow-y:auto">
                        <select required id="ScheduleGUID" class="inputPersonData" data-width="100%">
                            @foreach (var schedule in Model.Schedules.OrderBy(g => g.Name))
                            {
                                if (Model.Schedules.FirstOrDefault(g => g.Guid == schedule.Guid) != null)
                                {
                                    <option selected="selected" value="@schedule.Guid">@schedule.Name</option>
                                }
                                else
                                {
                                    <option value="@schedule.Guid">@schedule.Name</option>
                                }
                            }
                        </select>
                    </div>

                    <label class="label-light">Юр. лицо</label>
                    <input required type="text" class="inputPersonData" id="">
                </div>

                <div class='rightBlockPersonData'>
                    <label class="label-light">Юр. лицо разнесения затрат</label>
                    <input required type="text" class="inputPersonData" id="">

                    <label class="label-light">Период действия версии</label>
                    <div class='rightBlockPersonData__versions'>
                        <label class="label-light">С</label>
                        <div>
                            <input required type="datetime-local" class="inputPersonData correctForData" id="">
                        </div>
                        <label class="label-light">По</label>
                        <div>
                            <input required type="datetime-local" class="inputPersonData correctForData" id="">
                        </div>
                    </div>

                    <div class="buttonAddPerson">
                        <button class="buttonAddPersonData" type="submit">ДОБАВИТЬ</button>
                        <button class="buttonAddPersonData buttonClearPersonData" onclick="clearInputs()">ОЧИСТИТЬ</button>
                    </div>
                </div>
            </form>
        }
    </div>
</div>


<script>
    const actualPicker = document.querySelector('.actual');
    const valueDismissalsDate = document.querySelector('.dissDate');
    valueDismissalsDate.addEventListener('input', () => {
        if(valueDismissalsDate.value != '') {
            actualPicker.innerHTML = "<option value='1' >Активен</option><option value='2' >Отстранен</option><option value='0' selected>Уволен</option>";              
        } else {
            actualPicker.innerHTML = "<option value='1' selected>Активен</option><option value='2' >Отстранен</option><option value='0' >Уволен</option>";
        }
    })

    // Возврат к таблице
    $('#back').unbind('click');
    $('#back').click(function () { location.hash = "#Personality" });

    function clearInputs() {
        // Получаем все элементы input на странице и очищаем их значение
        document.querySelectorAll(".inputPersonData").forEach(input => input.value = "");
    }


    document.getElementById("user-form").addEventListener("submit", function(event) {
        event.preventDefault();
        if (this.checkValidity()){
            if(location.hash == '#EditPerson'){
                editUser();
            }
            else {
                addUser();
            }
        }
    })
</script>

<script>
    const name = document.getElementById('namePerson');
    const surname = document.getElementById('surnamePerson');
    if(name.value == '' && surname.value == '') {
        clearInputs();
    }
</script>

@* Отправляем JSON *@
<script>
    function addUser() {
        const Personality = {};
        Personality.Name = $('#namePerson').val();
        Personality.Surname = $('#surnamePerson').val();
        Personality.Patronymic = $('#patronymicPerson').val();
        Personality.BirthDate = $('#birthDatePerson').val();
        Personality.JobTitle = $('#jobTitlePerson').val();
        Personality.location = $('#TTPerson').val();
        Personality.HireDate = $('#HireDate').val();
        Personality.DismissalsDate = $('#DismissalsDate').val();
        Personality.Schedule = $('#ScheduleGUID').val();
        Personality.Actual = $('.actual').val();

        const json = JSON.stringify(Personality)
         $.ajax({
            type: "POST",
            url: '/Personality/PersonalityAdd',
            data: { json: json },
            datatype: "text",
            success: function (result) {
                if (result.ok) {
                    alert(result.data);
                    SpinnerShow();
                    location.hash = '#Personality'
                }
                else {
                    alert(result.data);
                }
            },
            error: function (error) { alert(error.responseText); }
        }); 
    }
</script>

@* Отправляем JSON (Редактирование пользователя) *@
<script>
    function editUser() {
        const Personality = {};
        Personality.GUID = $('#personGUID').val();
        Personality.Name = $('#namePerson').val();
        Personality.Surname = $('#surnamePerson').val();
        Personality.Patronymic = $('#patronymicPerson').val();
        Personality.BirthDate = $('#birthDatePerson').val();
        Personality.JobTitle = $('#jobTitlePerson').val();
        Personality.location = $('#TTPerson').val();
        Personality.HireDate = $('#HireDate').val();
        Personality.DismissalsDate = $('#DismissalsDate').val();
        Personality.Schedule = $('#ScheduleGUID').val();
        Personality.Actual = $('.actual').val();

        const json = JSON.stringify(Personality)
        $.ajax({
            type: "PUT",
            url: '/Personality/PersonalityPut',
            data: { json: json },
            datatype: "text",
            success: function (result) {
                if (result.ok) {
                    SpinnerShow();
                    location.hash = '#Personality'
                }
                else {
                    alert(result.data);
                }
            },
            error: function (error) { alert(result.data); }
        });
    }
</script>
