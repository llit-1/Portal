<!--С€Р°РїРєР°-->
<div id="headMenu" class="row" style="margin:0px">
    <div class="col-12">

        <!--Р±Р»РѕРє Р·Р°РіРѕР»РѕРІРєР°-->
        <table class="table-page-menu" style="margin-top: 10px; margin-bottom: 10px">
            <tbody>
                <tr>
                    <!--РЅР°Р·Р°Рґ-->
                    <td id="back" style="text-align:left; width:100px; cursor:pointer">
                        <img src="/themes/clearmin/img/md/dark/keyboard-backspace.svg" height="38" width="24" style="cursor:pointer">
                        <label style="margin-left:10px; cursor:pointer">РЅР°Р·Р°Рґ</label>
                    </td>
                    <!--Р·Р°РіРѕР»РѕРІРѕРє-->
                    <td>
                        <h2 id="header" style="margin:0px; margin-left:5px; margin-right:20px; margin-bottom:6px"></h2>
                    </td>
                </tr>
            </tbody>
        </table>

        <!--РјРµРЅСЋ С‚Р°Р±Р»РёС†С‹-->
        <div class="tableMenu" id="tableMenu">
            
            <div id="tableMenu1" class="col-md-12" style="padding:0px">
                <input class="form-control-sm" placeholder="РџРѕРёСЃРє" id="searchDatatable">
                <a href="#AddPerson" class="btn btn-sm btn-success" id="buttonAdd" style="margin-left:20px">РґРѕР±Р°РІРёС‚СЊ</a>
            </div>


            <div class="userActive">
                <span class="textForCheckbox">РџРѕРєР°Р·Р°С‚СЊ РЅРµР°РєС‚РёРІРЅС‹С… РїРѕР»СЊР·РѕРІР°С‚РµР»РµР№</span>
                <label class="switch">
                    <input type="checkbox" class="switch__input" id="closedPersonality" onchange="loadPersonalityTable()">
                    <span class="switch__slider"></span>
                </label>
            </div>

        </div>

        <!--РјРµРЅСЋ РґРѕР±Р°РІР»РµРЅРёСЏ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ-->
        <div id="addMenu" class="col-md-12" style="margin-top:10px; padding:0px">

        </div>

    </div>
</div>

<div id="page" style="margin-top:15px"></div>

<!-- Р—Р°РіСЂСѓР·РєР° С‚Р°Р±Р»РёС†С‹ РїРѕР»СЊР·РѕРІР°С‚РµР»РµР№, РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ РїРѕРєР°Р·С‹РІР°РµС‚ РІСЃРµС… РїРѕР»СЊР·РѕРІР°С‚РµР»РµР№ СЃ Р°РєС‚РёРІРЅС‹Рј РїСЂРѕС„РёР»РµРј -->
<script>
    
   

    function loadPersonalityTable() {
        try{
            let closedPersonality = document.getElementById('closedPersonality').checked;

            if (closedPersonality) {
                SpinnerShow();
                $('#page').load('/Personality/PersonalityTable?showUnActual=1&page=1', function () { SpinnerHide(); });
            } else {
                SpinnerShow();
                $('#page').load('/Personality/PersonalityTable?showUnActual=0&page=1', function () { SpinnerHide(); });
            }
            
        }   
        catch{
            return document.getElementById('page').innerHTML = '<div>РќРµС‚ РґР°РЅРЅС‹С…</div>'
        }
        
    }
</script>

<script>
    function DataTable() {
        $('#header').text('РџРѕР»СЊР·РѕРІР°С‚РµР»Рё');
        $('#back').unbind('click');
        $('#back').click(function () { location.hash = "#staff" });
        $('#tableMenu').show();
        //$('#editMenu').hide();
        //$('#addMenu').hide();
        $('#page').empty();
        loadPersonalityTable();
    }
    DataTable()
</script>




<!--Р·Р°РіСЂСѓР·РєР° С„РѕСЂРјС‹ РґРѕР±Р°РІР»РµРЅРёСЏ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ-->
<script>
    function AddItem(typeGuid, newPerson) {
        // РЎСЃС‹Р»РєР° РЅР° СЃС‚СЂР°РЅРёС†Сѓ
        location.hash = "#AddPerson";
        // Р РµРґР°РєС‚РёСЂСѓРµРј header
        if (newPerson == 1) {
            $('#header').text('Р”РѕР±Р°РІР»РµРЅРёРµ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ');
        } else {
            $('#header').text('Р”РѕР±Р°РІР»РµРЅРёРµ РІРµСЂСЃРёРё');
        }
        // РЎРєСЂС‹РІР°РµРј РІСЃРµ Р»РёС€РЅРµРµ
       //$('#tableMenu').hide();
      // $('#editMenu').hide();
       $('#addMenu').show();
        SpinnerShow();
        $('#page').load(`/Personality/PersonalityEdit?typeGuid=${typeGuid}&newPerson=${newPerson}` , function () {
         SpinnerHide()
         });
    }
</script>

<!--Р·Р°РіСЂСѓР·РєР° СЂРµРґР°РєС‚РѕСЂР° РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ-->
<script>
    function EditItem(itemName, typeGuid, newPerson) {
        location.hash = "#EditPerson";
        $('#header').text(itemName);
        $('#tableMenu').hide();
        //$('#editMenu').show();
        //$('#addMenu').hide();
        SpinnerShow();
        $('#page').load(`/Personality/PersonalityEdit?typeGuid=${typeGuid}&newPerson=${newPerson}`, function () {
            SpinnerHide()
        });
    }
</script>

<!--Р·Р°РіСЂСѓР·РєР° С‚Р°Р±Р»РёС†С‹ РІРµСЂСЃРёР№ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ-->
<script>
    function PersonalityVersions(typeGuid, newPerson) {
        location.hash = "#PersonalityVersions";
        $('#header').text('Р’С‹Р±РѕСЂ РІРµСЂСЃРёРё');
        $('#back').unbind('click');
        $('#back').click(function () {
            $('#tableMenu').show();
            $('.userActive').show();
            DataTable();
         });
        $('.userActive').hide();
        $('#tableMenu').show();
        $('#editMenu').show();
        $('#addMenu').hide();
        SpinnerShow();
        $('#page').load(`/Personality/PersonalityVersions?typeGuid=${typeGuid}&newPerson=${newPerson}`, function () {
            SpinnerHide()
        });
    }
</script>

<script>

    function debounce(func, delay) {
        let timer;
        return function () {
            const context = this;
            const args = arguments;
            clearTimeout(timer);
            timer = setTimeout(() => {
                func.apply(context, args);
            }, delay);
        };
    }

    function setupSearchInputHandler() {
            let controller = new AbortController();
            let signal = controller.signal;

            $("#searchDatatable").on("input", debounce(function (event) {
                const searchItem = $(this).val();
                SpinnerShow();

                // Отменяем предыдущий запрос
                controller.abort();
                controller = new AbortController();
                signal = controller.signal;

                // Запрос к серверу
                fetch(`/Personality/PersonalityTable?showUnActual=1&page=1&searchItem=${searchItem}`, {
                    method: "GET",
                    signal: signal
                })
                    .then(response => response.text())
                    .then(data => {
                        // Обновление таблицы
                        $('#page').html(data);
                        SpinnerHide();
                    })
                    .catch(error => {
                        if (error.name === 'AbortError') {
                            console.log('Запрос был отменен');
                        } else {
                            document.getElementById("tablePerson").innerHTML = `<tr class="odd"><td valign="top" colspan="9" class="dataTables_empty">Совпадений не найдено</td></tr>`;
                        }
                    });
            }, 900));
    }


    // Вызываем функцию при загрузке страницы
    $(document).ready(function () {
        setupSearchInputHandler();
    });
</script>