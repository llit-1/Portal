@model Portal.Controllers.ReplacementGroupsModel

<!--шапка-->
<div id="headMenu" class="row" style="margin:0px">
    <div class="col-12">
        <div class="row" style="margin-top: 0px; margin-bottom:10px">
            <!--Назад-->
            <a id="back" href="#calculators" class="col-sm-1 el-marging" style="width:100px; cursor:pointer; color:black">
                <img src="~/themes/clearmin/img/md/dark/keyboard-backspace.svg" height="38" width="24"><label style="margin-left:10px; cursor:pointer">назад</label>
            </a>
        </div>       
    </div>
</div>

<div id="page" style="margin-top:15px">

    <div class="replacement_wrapper">

        <div class="replacement_panel">
            <div class="groupList_header">
                <p>Группы</p>
                <button class="btn btn-success" onclick="showModalReplacement()">Добавить</button>
            </div>

            <div class="groupList_body">


                <div class="groupList" id="groupList">
                    @* <div class="groupList_items groupList_items--active">Сладкие слойки</div> *@
                    @* <div class="groupList_items">Сытные слойки</div> *@
                    @* <div class="groupList_items">Вкусные десерты</div> *@
                    @* <div class="groupList_items">Мягкие батоны</div> *@
                    @* <div class="groupList_items">Жесткие хлеба</div> *@
                    @* <div class="groupList_items">Вкуснейшие пироги</div> *@

                    @foreach(var group in Model.ReplacementGroups)
                    {
                        <div id="@group.ID" class="groupList_items">
                            @group.Name
                        </div>
                    }
                </div>

            </div>
        </div>

        <div class="replacement_panel">

            <div class="replacement_panel_header">
                <p>Выбор продукции</p>
            </div>


            <div class="replacement_panel_body">
                <div class="form-group">
                    <div style="width:100%; float:left; margin-bottom:15px">
                        <select id="groupList_item" class="form-control selectors" multiple="multiple" data-width="100%">

                            @foreach(var item in Model.Items)
                            {
                                int? value = 0;

                                if (item.ReplacementGroups?.ID != null)
                                {
                                    value = item.ReplacementGroups?.ID;
                                }

                                <option id="@item.RkCode" value="@value">@item.Name</option>
                            }

                        </select>
                    </div>
                </div>
            </div>

            <button class="btn btn_success" id="button_save" onclick="SetItemsInGroup()">Сохранить</button>

        </div>

    </div>

</div>


<div class="modalEditReplacement" style="display: none" id="editReplacementModal">
    <div class="modalEditReplacement-content">
        <label style="margin: 0px">Название группы</label>
        <input id="modalEditReplacement-name" value="">
        <div class="ReplacementButtonsWrapper">
            <button id="modalEditReplacement-delete" style="background-color: #a9a9a9; display: none">Удалить</button>
            <button id="modalEditReplacement-save">Добавить</button>
        </div>
    </div>
</div>

<script>

    groupList_items = document.querySelectorAll(".groupList_items");

    const state = {
        selectedGroup: groupList_items[0]
    }

    groupList_items.forEach(elem => {
        elem.addEventListener("click", () => {
            groupList_items.forEach(x => x.classList.remove("groupList_items--active"))
            elem.classList.add("groupList_items--active")

            state.selectedGroup = elem;

            const groupList_item = document.getElementById("groupList_item")
            const id = elem.id;

            $('#groupList_item').val(null).trigger('change');

            document.querySelectorAll("option").forEach(x => {
                if(x.value === id)
                {
                    x.selected = true;
                } else {
                    x.selected = false;
                }
            }) 

            $('#groupList_item').trigger('change');
        })
    })

    state.selectedGroup.click()


    $('#groupList_item').select2({
        theme: "bootstrap4",
        language: "ru",
        closeOnSelect: false,
        placeholder: "выберите продукт..."
    });

    let modalEditReplacement = document.getElementById('editReplacementModal');
    const modalContent = modalEditReplacement.querySelector('.modalEditReplacement-content');
    const modalName = document.getElementById("modalEditReplacement-name")
    const buttonSave = document.getElementById("modalEditReplacement-save")
    const buttonDelete = document.getElementById("modalEditReplacement-delete")
    
    // Функция для закрытия модального окна
    function closeModal() {
      let  modalEditReplacement = document.getElementById('editReplacementModal');
      modalEditReplacement.style.display = "none"
    }

    function showModalReplacement() {
        document.querySelector(".modalEditReplacement").style.display = "flex"
        buttonSave.onclick = function() {
            // Берем значение поля только при клике
            addGroup(modalName.value);
        };
    }

    async function addGroup(name) {

        if(!name)
        {
            alert("Поле имени пустое")
        }

        try {

            $("#spinner").show()

            const request = await fetch("Calculator/CreateGroup?name=" + name, {method: "POST"})

            if(!request.ok)
            {
                const response = await request.json()

                throw new Error(response.message);
            }

            $("#container-fluid").load("Calculator/ReplacementGroups")

        } catch(e) {

            alert(e)

        } finally {

            $("#spinner").hide()

        }
        
    }

    modalEditReplacement.addEventListener('click', function(e) {
        if (!modalContent.contains(e.target)) {
            closeModal();
        }
    });

    async function SetItemsInGroup() {

        const itemsModel = {
            Group: +state.selectedGroup.id,
            Items: [],
        }

        $('#groupList_item').select2('data').forEach(x => {
            itemsModel.Items.push(+x.element.id)
        })

        try {

            $("#spinner").show()

            const request = await fetch("/Calculator/SetItemsInGroup", {
                headers: {
                    'Content-Type': 'application/json',
                },
                method: "POST",
                body: JSON.stringify(itemsModel)
            })

            if(!request.ok)
            {
                const response = await request.json()

                throw new Error(response.message);
            }

            $("#container-fluid").load("Calculator/ReplacementGroups")

        } catch(e) {

            alert(e)

        } finally {

            $("#spinner").hide()

        }
    }

    document.addEventListener("keydown", (e) => {
        if(e.key === "Delete")
        {
            const answer = confirm("Вы действительно хотите удалить группу?")

            if(answer)
            {
                deleteGroup()
            }
        }
    })

    async function deleteGroup() {
        try {
            $("#spinner").show()
            const request = await fetch("/Calculator/DeleteGroup?id=" + state.selectedGroup.id, {method: "DELETE"})

            if(!request.ok)
            {
                const response = await request.json()

                throw new Error(response.message);
            }

            $("#container-fluid").load("Calculator/ReplacementGroups")

        } catch(e) {

            alert(e)

        } finally {

            $("#spinner").hide()

        }
    }

</script>

