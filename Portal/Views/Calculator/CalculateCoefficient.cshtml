@model Portal.Controllers.CalculateCoefficientModel
<div class="row" style="margin-top: 0px; margin-bottom:10px">
    <!--Назад-->
    <a href="#calculators" class="col-sm-1 el-marging" style="width:100px; cursor:pointer; color:black">
        <img src="~/themes/clearmin/img/md/dark/keyboard-backspace.svg" height="38" width="24"><label style="margin-left:10px; cursor:pointer">назад</label>
    </a>

</div>
@{
    // загрузка модальных окошек в представление
    await Html.RenderPartialAsync("ModalWindows");
    var display = "";
    var disabled = "disabled";
    var formClass = "input-group";
    var blockStyle = "style=padding:30px;padding-top:10px;padding-bottom:20px"; // стиль блоков
    var openDate = "";
    var closeDate = "";
    var ttCode = "";
    var locVerName = "";
    var locVerRKCode = 0;
    var oldAddress = "";
    var locVerOBD = "";
    var guidNewBase = "0";
    var newAddress = "";
    var oldId = "";
    Double? latitude = 0.0;
    Double? longitude = 0.0;
    display = "d-none";
    disabled = "";
    formClass = "form-group";

}

<div class="row flex bg-white" id="calculate_wrapper" style="margin:0px">

    <div class="col-md-3 col-lg-3" @blockStyle>
        <!--заголовок-->
        <h5 class="pull-left">K1(Точка-СKЮ)</h5>
        <!--разделитель-->
        <hr style="width:100%" />

        <!--организация-->
        <div class="form-group">
            <label class="label-light" style="width:100%">СKЮ</label>
            <div style="width:100%; float:left; margin-bottom:15px">
                <select id="K1Item" class="form-control selectors" data-width="100%" multiple="multiple">
                    @foreach (var items in Model?.Items.OrderBy(o => o.Name))
                    {
                        <option value="@items.RkCode">@items.Name</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            <label class="label-light" style="width:100%">ТТ</label>
            <div style="width:100%; float:left; margin-bottom:15px">
                <select id="K1TT" class="form-control selectors" data-width="100%" multiple="multiple">
                    @foreach (var tts in Model?.TT.OrderBy(o => o.TTName))
                    {
                        <option value="@tts.TTCode">@tts.TTName</option>
                    }
                </select>
            </div>
        </div>


        <div class="form-group">
            <label class="label-light" style="width:100%">Отложенное выполнение</label>
            <div style="width:100%; float:left; margin-bottom:15px">
                <input type="datetime-local" class="form-control" id="K1Date" data-width="100%">
            </div>
        </div>


        <div class="Ides" style="width:100%;">
            <div class="col-md-4 col-lg-4">
                <label class="label-light">K</label>
                <input id="K1" type="number" class="form-control no-plus-input" style="font-weight:bold">
            </div>

            <div class="col-md-4 col-lg-4">
                <label class="label-light">ΔK</label>
                <input id="ΔK1" type="number" class="form-control no-plus-input" style="font-weight:bold">
            </div>

            <div class="col-md-4 col-lg-4">
                <label class="label-light">XK</label>
                <input id="XK1" type="number" class="form-control no-plus-input" style="font-weight:bold">
            </div>
        </div>

        <div>
            <button id="K1Submit" type="button" class="btn btn-sm btn-success default" onclick="showWarningModal(1)" style="float: left">Изменить</button>
            <button type="button" class="btn btn-sm btn-light default" onclick="loadKTable(1)" style="float: right">Просмотр</button>
        </div>

    </div>


    <div class="col-md-3 col-lg-3" @blockStyle>
        <!--заголовок-->
        <h5 class="pull-left">K2(СКЮ)</h5>

        <!--разделитель-->
        <hr style="width:100%" />


        <div class="form-group">
            <label class="label-light" style="width:100%">СKЮ</label>
            <div style="width:100%; float:left; margin-bottom:15px">
                <select id="K2Item" class="form-control selectors" data-width="100%" multiple="multiple">
                    @foreach (var items in Model?.Items.OrderBy(o => o.Name))
                    {
                        <option value="@items.RkCode">@items.Name</option>
                    }
                </select>
            </div>
        </div>


        <div class="form-group">
            <label class="label-light" style="width:100%">Группа товаров</label>
            <div style="width:100%; float:left; margin-bottom:15px">
                <select id="K2ItemGroup" class="form-control selectors" data-width="100%" multiple="multiple">
                    @foreach (var items in Model?.ItemsGroups.OrderBy(o => o.Name))
                    {
                        <option value="@items.Guid">@items.Name</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            <label class="label-light" style="width:100%">Отложенное выполнение</label>
            <div style="width:100%; float:left; margin-bottom:15px">
                <input type="datetime-local" class="form-control" id="K2Date" data-width="100%">
            </div>
        </div>


        <div class="Ides" style="width:100%;">
            <div class="col-md-4 col-lg-4">
                <label class="label-light">K</label>
                <input id="K2" type="number" class="form-control no-plus-input" style="font-weight:bold">
            </div>

            <div class="col-md-4 col-lg-4">
                <label class="label-light">ΔK</label>
                <input id="ΔK2" type="number" class="form-control no-plus-input" style="font-weight:bold">
            </div>

            <div class="col-md-4 col-lg-4">
                <label class="label-light">XK</label>
                <input id="XK2" type="number" class="form-control no-plus-input" style="font-weight:bold">
            </div>
        </div>


        <div>
            <button id="K2Submit" type="button" class="btn btn-sm btn-success default" onclick="showWarningModal(2)" style="float: left">Изменить</button>
            <button type="button" class="btn btn-sm btn-light default" onclick="loadKTable(2)" style="float: right">Просмотр</button>
        </div>

    </div>


    <div class="col-md-3 col-lg-3" @blockStyle>
        <!--заголовок-->
        <h5 class="pull-left">K3(ТТ - Временная группа)</h5>

        <!--разделитель-->
        <hr style="width:100%" />

        <!--организация-->
        <div class="form-group">
            <label class="label-light" style="width:100%">ТТ</label>
            <div style="width:100%; float:left; margin-bottom:15px">
                <select id="K3TT" class="form-control selectors" data-width="100%" multiple="multiple">
                    @foreach (var tts in Model?.TT.OrderBy(o => o.TTName))
                    {
                        <option value="@tts.TTCode">@tts.TTName</option>
                    }
                </select>
            </div>
            <button type="button" class="save btn btn-default d-none" onclick="SaveSelect(this)" style="float:left"><i class="fa fa-fw fa-save"></i></button>

            <!--сохранение...-->
            <button type="button" class="saving btn btn-default d-none" style="float:left"><i class="fa fa-fw fa-circle-o-notch rotating"></i></button>

            <!--отменить-->
            <button type="button" class="cancel btn btn-default d-none" onclick="CancelSelect(this)" style="float:left"><i class="fa fa-fw fa-close"></i></button>
        </div>


        <!--организация-->
        <div class="form-group">
            <label class="label-light" style="width:100%">Временная группа</label>
            <div style="width:100%; float:left; margin-bottom:15px">
                <select id="K3timeGroup" class="form-control selectors" data-width="100%" multiple="multiple">
                    @foreach (var timegr in Model?.TimeGroups.OrderBy(o => o.Name))
                    {
                        <option value="@timegr.Guid">@timegr.Name</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            <label class="label-light" style="width:100%">Отложенное выполнение</label>
            <div style="width:100%; float:left; margin-bottom:15px">
                <input type="datetime-local" class="form-control" id="K3Date" data-width="100%">
            </div>
        </div>


        <div class="Ides" style="width:100%;">
            <div class="col-md-4 col-lg-4">
                <label class="label-light">K</label>
                <input id="K3" type="number" class="form-control no-plus-input" style="font-weight:bold">
            </div>

            <div class="col-md-4 col-lg-4">
                <label class="label-light">ΔK</label>
                <input id="ΔK3" type="number" class="form-control no-plus-input" style="font-weight:bold">
            </div>

            <div class="col-md-4 col-lg-4">
                <label class="label-light">XK</label>
                <input id="XK3" type="number" class="form-control no-plus-input" style="font-weight:bold">
            </div>
        </div>

        <div>
            <button id="K3Submit" type="button" class="btn btn-sm btn-success default" onclick="showWarningModal(3)" style="float: left">Изменить</button>
            <button type="button" class="btn btn-sm btn-light default" onclick="loadKTable(3)" style="float: right">Просмотр</button>
        </div>
    </div>

    <div class="col-md-3 col-lg-3 wrapper_view_task" @blockStyle>
        <!--заголовок-->
        <h5 class="pull-left">Просмотр заданий</h5>

        <div class="view_task">
            @if (Model.CalculatorCofTasks.Count > 0)
            {
                @foreach (var item in Model.CalculatorCofTasks.OrderByDescending(x => x.Execution))
                {
                    @if (item.Execution < DateTime.Now)
                    {
                        <task class="task_card task_card_error" onclick="openTaskModal('@item.Task')">
                            <div class="card_data">
                                <b>Номер:</b>
                                <span>@item.Task</span>
                            </div>
                            <div class="card_data">
                                <b>Создано:</b>
                                <span>@item.Orderer</span>
                            </div>
                            <div class="card_data">
                                <b>Дата создания:</b>
                                <span>@item.Creation</span>
                            </div>
                            <div class="card_data">
                                <b>Дата выполнения:</b>
                                <span>@item.Execution</span>
                            </div>
                        </task>
                    }
                    else
                    {
                        <task class="task_card" onclick="openTaskModal('@item.Task')">
                            <div class="card_data">
                                <b>Номер:</b>
                                <span>@item.Task</span>
                            </div>
                            <div class="card_data">
                                <b>Создано:</b>
                                <span>@item.Orderer</span>
                            </div>
                            <div class="card_data">
                                <b>Дата создания:</b>
                                <span>@item.Creation</span>
                            </div>
                            <div class="card_data">
                                <b>Дата выполнения:</b>
                                <span>@item.Execution</span>
                            </div>
                        </task>
                    }
                }
            } else {
                <div class="task_card_empty"> Отложенные задания отсутствуют! </div>
            }
            
            
        </div>

    </div>

</div>

<div id="page" style="margin-top:15px"></div>

<div id="WarningModal" class="modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">

            <!--заголовок-->
            <div class="modal-header">
                
                <h4 id="message" class="modal-title">                    
                    <a class="anchorjs-link" href="#myModalLabel"><span class="anchorjs-icon"></span></a>
                </h4>
                <h1 id="cof" class="hidden"></h1>
            </div>           
            <!--кнопки-->
            <div class="modal-footer">
                <button id="changeK" type="button" class="btn btn-sm btn-danger" onclick="changeK()" style="float:left">изменить</button>
                <button type="button" class="btn btn-sm btn-default" data-dismiss="modal"> отмена </button>
            </div>

        </div>
    </div>
</div>

<div id="WarningModalNullException" class="modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">

            <!--заголовок-->
            <div class="modal-header" style="border: none; text-align: center">

                <h4 id="messageNullException" class="modal-title">
                    <a class="anchorjs-link" href="#myModalLabel"><span class="anchorjs-icon"></span></a>
                </h4>
                <h1 id="cof" class="hidden"></h1>
            </div>
            <!--кнопки-->
            <div class="modal-footer" style="border: none; text-align: center">
                <button type="button" class="btn btn-sm btn-default" data-dismiss="modal"> закрыть </button>
            </div>

        </div>
    </div>
</div>

<div id="InformModal" class="modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">

            <!--заголовок-->
            <div class="modal-header" >

                <h4 id="mess" class="modal-title">
                    <a class="anchorjs-link" href="#myModalLabel"><span class="anchorjs-icon"></span></a>
                </h4>
            </div>
            <!--кнопки-->
            <div class="modal-footer" >
                <button type="button" class="btn btn-sm btn-default" data-dismiss="modal"> закрыть </button>
            </div>
        </div>
    </div>
</div>


<div id="modal-calculate" class="modal-calculate"></div>



<script>
    $('.selectors').select2({
        theme: "bootstrap4",
        language: "ru",
        closeOnSelect: false,
        placeholder: "выберите группы..."
    });
</script>



<script>
    function loadKTable(k) {
        fetch('/Calculator/CalculateCoefficientTable', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify(getPageInformation(k))
      }).then(response => response.text()) // Получаем HTML-код как текст
        .then(htmlResponse => {
         const pageElement = document.getElementById('page');
        pageElement.innerHTML = htmlResponse;

        // Извлекаем и выполняем скрипты
        const scripts = pageElement.querySelectorAll('script');
        scripts.forEach(script => {
            const newScript = document.createElement('script');
            if (script.src) {
                // Если скрипт внешний (с src)
                newScript.src = script.src;
            } else {
                // Если скрипт встроенный
                newScript.textContent = script.textContent;
            }
            document.body.appendChild(newScript).remove(); // Добавляем и сразу удаляем
        });
    })
      }   
</script>

 <script>
     function showWarningModal(k) {
       document.getElementById('message').textContent = 'Вы уверерены что хотите изменить k' + k + ' для заданных параметров';
       document.getElementById('cof').textContent = k;
       $("#WarningModal").modal("show");
    }

    function showWarningModalNullException() {
       document.getElementById('messageNullException').textContent = 'Значение k не задано';
       $("#WarningModalNullException").modal("show");
    }
    
</script>
<script>
    function changeK() {
     SpinnerShow();
     let k = +document.getElementById('cof').textContent;
     let data = getPageInformation(k)

     if(data.Kdelta == '' && data.KX == '' && data.KEql == '')
     {
        SpinnerHide()
        $("#WarningModal").modal("hide")
        return showWarningModalNullException()
     }

     fetch('/Calculator/ChangeCalculateCoefficient', {
     method: 'POST',
     headers: {'Content-Type': 'application/json'},
     body: JSON.stringify(data)
      }).then(response => {
          if (response.ok) {
              SpinnerHide();
              $("#WarningModal").modal("hide");
              document.getElementById('mess').textContent = 'Данные успешно изменены';
              $("#container-fluid").load("/Calculator/CalculateCoefficient")
          } 
          else {
            throw new Error('Network response was not ok');
          }
        })
        .catch(error => {
          SpinnerHide();
          $("#WarningModal").modal("hide");
          document.getElementById('mess').textContent = 'Ошибка при попытке изменить данные';
          $("#container-fluid").load("/Calculator/CalculateCoefficient")
        });
       }
</script>

<script>
    // Функция для запрета ввода символа '+'
    function preventPlusInput(inputElement) {
        // Блокировка ввода символа '+' на этапе нажатия клавиши
        inputElement.addEventListener('keydown', function (event) {
            if (event.key === '+') {
                event.preventDefault();
            } 
        });
        inputElement.addEventListener('input', function () {
            const parentContainer = this.closest('.Ides'); // Ищем общего родителя
            if (parentContainer) {
                const allInputs = parentContainer.querySelectorAll('.no-plus-input'); // Все инпуты внутри родителя
                const otherInputs = Array.from(allInputs).filter(input => input !== this); // Исключаем текущий инпут
                otherInputs.forEach(input => {
                    input.value = ""; // Очищаем другие инпуты
                });
            }
        });

    }
    // Находим все элементы с классом 'no-plus-input'
    const inputs = document.querySelectorAll('.no-plus-input');

    // Применяем функцию ко всем найденным элементам
    inputs.forEach(input => {
        preventPlusInput(input);

    });
</script>

<script>
    function getPageInformation(k){
        let SKUOptions = Array.from(document.getElementById("K1Item").selectedOptions);
        let Items1 = SKUOptions.map(option => +option.value);
        let TTOptions = Array.from(document.getElementById("K1TT").selectedOptions);
        let TTs1 = TTOptions.map(option => option.value);
        let date1 = document.getElementById('K1Date').value;
        let K1 = document.getElementById('K1').value;
        let deltaK1 = document.getElementById('ΔK1').value;
        let XK1 = document.getElementById('XK1').value;
        SKUOptions = Array.from(document.getElementById("K2Item").selectedOptions);
        let Items2 = SKUOptions.map(option => +option.value);
        let ItemsGroupsOptions = Array.from(document.getElementById("K2ItemGroup").selectedOptions);
        let ItemsGroups2 = ItemsGroupsOptions.map(option => option.value);
        let date2 = document.getElementById('K2Date').value;
        let K2 = document.getElementById('K2').value;
        let deltaK2 = document.getElementById('ΔK2').value;
        let XK2 = document.getElementById('XK2').value;
        TTOptions = Array.from(document.getElementById("K3TT").selectedOptions);
        let TTs3 = TTOptions.map(option => option.value);
        let TimeGroupsOptions = Array.from(document.getElementById("K3timeGroup").selectedOptions);
        let TimeGroups3 = TimeGroupsOptions.map(option => option.value);
        let date3 = document.getElementById('K3Date').value;
        let K3 = document.getElementById('K3').value;
        let deltaK3 = document.getElementById('ΔK3').value;
        let XK3 = document.getElementById('XK3').value;
        const data = {
        K: k,
        Kdelta: null,
        KX: null,
        KEql: null,
        Items: [],
        TTs: [],
        ItemsGroups: [],
        TimeGroups: [],
        DeferredExecution: null
        }
        switch(k) {
             case 1:
             data.Kdelta = deltaK1;
             data.KX = XK1;
             data.KEql = K1;
             data.Items = Items1;
             data.TTs = TTs1;
             data.DeferredExecution = date1;
            break;
             case 2:
             data.Kdelta = deltaK2;
             data.KX = XK2;
             data.KEql = K2;
             data.Items = Items2;
             data.ItemsGroups = ItemsGroups2;
             data.DeferredExecution = date2;
            break;
             case 3:
             data.Kdelta = deltaK3;
             data.KX = XK3;
             data.KEql = K3;
             data.TTs = TTs3;
             data.TimeGroups = TimeGroups3;
             data.DeferredExecution = date3;
            break;
        }
        return data;
      }
</script>


<script>
        async function openTaskModal(task) {
        const response = await fetch(`/Calculator/CalculateCoefficientModal?task=${task}`);
        const data = await response.text();
        document.getElementById('modal-calculate').innerHTML = data;
        document.getElementById('modal-calculate').style.display = 'flex';
    }

    document.querySelector('.close').onclick = function() {
        document.getElementById('modal-calculate').style.display = 'none';
    }

    window.onclick = function(event) {
        const modal = document.getElementById('modal-calculate');
        if (event.target == modal) {
            modal.style.display = 'none';
        }
    }

    function closeCalculateModal() {
        document.getElementById('modal-calculate').style.display = 'none';
    }

    async function deleteTask(task) {
        let answer = confirm("Вы действительно хотите удалить задание?")
        if(answer) {
            await fetch("/Calculator/DeleteTask?task=" + task, {
                method: 'DELETE'
            })
            document.getElementById('modal-calculate').style.display = 'none';
            await $("#container-fluid").load("/Calculator/CalculateCoefficient")
        }
    }

</script>


@* Стили окна просмотра заданий *@
<style>
    .view_task {
        width: 100%;
        border: 1px solid;
        height: 308px;
        margin-bottom: 10px;
        border: 1px solid #DDD;
        display: flex;
        flex-direction: column;
        padding: 10px;
        gap: 10px;
        max-height: 308px;
        overflow: overlay;
    }

    .wrapper_view_task {
        display: flex;
        flex-direction: column;
    }

    .task_card {
        width: 100%;
        display: block;
        border: 1px solid #b8b8b8;
        display: flex;
        flex-direction: column;
        font-size: 10px;
        padding: 5px 10px;
        font-size: 13px;
        justify-content: space-evenly;
        gap: 1px;
        background-color: #f4f4f4;
        transition: all 0.25s linear;
    }

    .task_card_empty {
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        font-family: 'Akrobat-Light';
        font-size: 16px;
        font-size: 20px;
        text-align: center;
    }

    .task_card_error {
        background-color: #ff00004f;
    }

    .task_card:hover {
        cursor: pointer;
        background-color: #DDD;
    }

    .card_data {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .card_data b {
        font-family: 'Akrobat-Light';
        font-size: 16px;
    }

    .card_data span {
        font-size: 14px;
    }
</style>

@* Стили для модального окна *@
<style>
    .modal-calculate {
        display: none;
        position: fixed;
        z-index: 200;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgb(0,0,0);
        background-color: rgba(0,0,0,0.4);
        padding-top: 60px;
        justify-content: center;
        align-items: center;
    }

    .modal-content {
        background-color: #fefefe;
        margin: 5% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

    .close:hover,
    .close:focus {
        color: black;
        text-decoration: none;
        cursor: pointer;
    }
</style>