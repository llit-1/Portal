@model List<Portal.Models.MSSQL.WarehouseCategories>

<div class="stock">

    <div id="stock_back">

        <div id="back">
            <img src="/themes/clearmin/img/md/dark/keyboard-backspace.svg" height="38" width="24" style="cursor:pointer">
            <label style="margin-left:10px; cursor:pointer; margin-bottom:0px;">назад</label>
        </div>

        <div class="back_active">
            <span style="font-family: 'Akrobat-regular'; font-weight: bold;">Показать неактивные записи</span>

            <div class="material-switch pull-right">
                <input class="slider addCategory"
                       id="switchActive"
                       type="checkbox"
                       onClick="Stock()"
                @(ViewBag.Actual == 1 ? "checked" : "") />
                <label for="switchActive" class="label-warning"></label>
            </div>
       </div>
       

        <div class="stock_back_input">
            <img src="/themes/clearmin/img/search.png">
            <input id="stock_search" />
        </div>

        <div id="searchResults" class="search-results" style="display: none;">
            <span>Ничего нет</span>
        </div>

    </div>

    <div id="stock_wrapper"  class="stock_wrapper">
        <div class="wrapper_card wrapper_addNewCategories" onclick="event.stopPropagation();openModal(0)"> + </div>
        @foreach(var item in Model)
        {
            <div class="wrapper_card">
                <div class="wrapper_card_header">
                    
                    
                    <img onclick="event.stopPropagation();openModal(@item.Id)" src="/themes/clearmin/img/settings.png" class="card_header_img" />
                </div>

                <div class="wrapper_card_body" onclick="openTable(@item.Id)">
                    @if (item.Img == null)
                    {
                        <img src="/themes/clearmin/img/question.png" class="cardImg" alt="" />
                    } else {
                        <img src="data:image/jpeg;base64,@Convert.ToBase64String(item.Img)" class="cardImg" alt="" />
                    }

                    <p class="wrapper_card_p">@item.Name</p>
                </div>

                
            </div>
        }
    </div>


    <div id="modalContainer" class="modal" style="display: none;"></div>
    

</div>

<div class="fullShadow"></div>

<script>
    $('#PageHeader').text('Склад');
    $('#back').unbind('click');
    $('#back').click(function () { location.hash = "#" });
</script> 

<script>
    const inputElement = document.getElementById('stock_search');
    const inputWrapper = document.querySelector(".stock_back_input")
    const fullShadow = document.querySelector(".fullShadow")

    inputElement.addEventListener('focus', () => {
        inputWrapper.style = "width: 70%"
        fullShadow.style = "opacity: 1; visibility: visible;"
    });

    inputElement.addEventListener('blur', () => {
        inputWrapper.style = "width: 23%"
        fullShadow.style = "opacity: 0; visibility: hidden;"
    });
</script>

<script>
    const inputElement = document.getElementById('stock_search');
    const searchResultsContainer = document.getElementById('searchResults');

        inputElement.addEventListener('input', async (e) => {
        const query = inputElement.value.trim();

        if (query.length === 0) {
            searchResultsContainer.style.display = 'none';
            return;
        }

        $("#spinner").show();

        try {
            const response = await fetch("/Stock/SearchItem?item=" + inputElement.value);

            $("#spinner").hide();
            searchResultsContainer.style.display = 'flex';

            if (response.ok) {
                const results = await response.json();

                // Очищаем контейнер перед добавлением новых результатов
                searchResultsContainer.innerHTML = '';

                // Проверяем, есть ли результаты
                if (results?.message != undefined) {
                    searchResultsContainer.innerHTML = '<p>Ничего не найдено</p>';
                } else {
                    // Создаём список результатов
                    const ul = document.createElement('ul');
                    ul.style.width = "100%"

                    // Перебираем массив массивов
                    results.forEach(item => {
                        const [id, text] = item; // Разбиваем массив на id и text
                        const li = document.createElement('li');
                        li.style.width = "100%"
                        li.textContent = text; // Значение (например, 'Мониторы / Samsung')
                        li.addEventListener('click', () => {
                           openTable(id)
                        });
                        ul.appendChild(li);
                    });

                    // Добавляем список в контейнер
                    searchResultsContainer.appendChild(ul);
                }
            } else {
                console.error("Ошибка при получении данных:", response.statusText);
            }

        } catch (error) {
            console.error("Ошибка:", error);
        }
    });

    

    // Скрываем результаты, если кликнули вне инпута
    document.addEventListener('click', (event) => {
        if (!inputElement.contains(event.target)) {
            searchResultsContainer.style.display = 'none';
        }
    });
</script>

<script>
    async function switchActive(id, event) {
        event.stopPropagation();

        try {
            const response = await fetch("/Stock/SwitchActual?id=" + id, {
                method: "UPDATE",
                headers: { "Content-Type": "text/html" }
            });

        } catch (error) {
            console.error("Error:", error);
        }
    }
</script>

<script>
    async function openModal(id = 0) {
        try {
            const response = await fetch("/Stock/LoadModal?id=" + id, {
                method: "GET",
                headers: { "Content-Type": "text/html" }
            });

            if (response.ok) {
                const modalHtml = await response.text();
                const modalContainer = document.getElementById("modalContainer");
                modalContainer.innerHTML = modalHtml;
                modalContainer.style.display = "block";

                const closeModalButton = document.getElementById("closeModalButton");
                if (closeModalButton) {
                    closeModalButton.addEventListener("click", function () {
                        modalContainer.style.display = "none";
                        modalContainer.innerHTML = "";
                    });
                }

                modalContainer.addEventListener("click", function (e) {
                    if (e.target === modalContainer) {
                        modalContainer.style.display = "none";
                        modalContainer.innerHTML = "";
                    }
                });
            } else {
                alert("Ошибка");
            }
        } catch (error) {
            console.error("Ошибка:", error);
        }
    }

</script>

<script>
    function selectImage() {
        const fileInput = document.createElement('input');
        fileInput.type = 'file';
        fileInput.accept = 'image/*';
        fileInput.onchange = function (event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();

                reader.onload = function (e) {
                    const stock_category_img = document.getElementById('stock_category_img');
                    if (stock_category_img) {
                        stock_category_img.src = e.target.result;
                    } else {
                        console.error("Element with id 'stock_category_img' not found");
                    }
                };

                reader.onerror = function (e) {
                    console.error("FileReader error: ", e);
                };

                reader.readAsDataURL(file);
            }
        };

        fileInput.click();
    }
</script>

<script>
    async function SaveCategory(id) {
        const name = document.getElementById("stock-category-name").value;
        const parent = document.getElementById("stock-category-parent").textContent;
        const actual = document.getElementById("stock-category-actual").textContent;
        const image = document.getElementById('stock_category_img');

        const formData = new FormData();
        formData.append('Id', id);
        formData.append('Name', name.trim());
        formData.append('Parent', parent.trim());
        formData.append('Actual', actual.trim());

        if(image.src == '/themes/clearmin/img/question.png')
        {
            formData.append('Img', null);
        } else {
            const imgFile = await fetch(image.src);
            const blob = await imgFile.blob();
            formData.append('Img', blob, 'image.png');
        }
        
        $("#spinner").show();

        const response = await fetch("/Stock/SaveCategory", {
            method: "PATCH",
            body: formData
        });

        $("#spinner").hide();

        $("#modalContainer").remove();

        return await $(".stock").load("/Stock/Stock");
    }
</script>

<script>
    async function SaveNewCategory() {
        const name = document.getElementById("stock-category-name").value;
        const image = document.getElementById('stock_category_img');
        
        const formData = new FormData();
        formData.append('Id', null);
        formData.append('Name', name.trim());
        formData.append('Parent', null);
        formData.append('Actual', 1);

        if(image.src == '/themes/clearmin/img/question.png')
        {
            formData.append('Img', null);
        } else {
            const imgFile = await fetch(image.src);
            const blob = await imgFile.blob();
            formData.append('Img', blob, 'image.png');
        }

        $("#spinner").show()

        const response = await fetch("/Stock/SaveNewCategory", {
            method: "PATCH",
            body: formData
        });



         $("#spinner").hide()

         $("#modalContainer").remove()

         return await $(".stock").load("/Stock/Stock")
    }
</script>

<script>
    async function DeleteCategory(id) {
        
        $("#spinner").show()
    
        const response = await fetch("/Stock/DeleteCategory?categoryId=" + id, {
            method: "DELETE",
            headers: {
                "Content-Type": "application/json"
            },
        });

         $("#spinner").hide()

         $("#modalContainer").remove()

         return await $(".stock").load("/Stock/Stock")
    }
</script>

<script>
    function openTable(id) {
        $(".stock").load("/Stock/StockTable?id=" + id)
    }
</script>

<script>

async function Stock() {

    if(document.getElementById("switchActive").checked)
    {
        return await $(".stock").load("/Stock/Stock?actual=1")
    }

    return await $(".stock").load("/Stock/Stock")
}
    
</script>

<style>
    .stock {
        display: flex;
        flex-direction: column;
        padding: 5px 0px;
    }

    #stock_back {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        width: 100%;
    }

    .stock_back_input {
        position: relative;
        border: 1px solid #80808066;
        padding: 5px;
        background-color: white;
        display: flex;
        justify-content: start;
        align-items: center;
        width: 23%;
        transition: all 0.25s linear;
        z-index: 2;
    }

    .stock_back_input > img {
        width: 14px;
        margin: 0px 5px;
    }

    .stock_back_input > input {
        border: none;
        font-family: "Akrobat-Regular";
        height: 100%;
        width: 100%;
        font-size: 16px;
    }

    .stock_wrapper {
        padding-top: 10px;
        width: 100%;
        /*height: calc(100dvh - 76px - 58px);*/
        background-color: #EEEEEE;

        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 10px;
        height: fit-content;
    }

    .wrapper_card {
        background-color: white;
        border: 1px solid #D3D2D2;
        height: 200px;
        display: flex;
        align-items: center;
        cursor: pointer;
        transition: all 0.25s linear;
        font-size: 16px;

        display: flex;
        flex-direction: column;
        gap: 10px;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
    }

    .wrapper_addNewCategories {
        color: #bdbdbd;
        font-size: 44px;
        justify-content: center;
    }

    .wrapper_card:hover {
        background-color: #f6f6f6;
    }

    .wrapper_card_header {
        display: flex;
        flex-direction: row;
        justify-content: end;
        width: 100%;
        align-items: center;
    }

    .card_header_img {
        width: 28px;
        height: 28px;
        cursor: pointer;
        transition: all 0.25s linear;
    }

    .card_header_img:hover {
        transform: scale(1.1);
    }

    .wrapper_card_body {
        height: 100%;
        display: flex;
        align-items: center;
        flex-direction: column;
        justify-content: space-around;
        width: 100%;
    }

    .cardImg {
        width: 55px;
        height: 55px;
    }

    .wrapper_card_p {
        font-size: 18px;
        font-weight: 600;
        font-family: "Akrobat-Regular";
    }

    .modal {
        display: block;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .fullShadow {
        width: 100%;
        height: 100%;
        z-index: 1;
        background: #8080807d;
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        opacity: 0;
        visibility: hidden;
        transition: all 0.25s linear;
    }

    .search-results {
        position: absolute;
        top: 100px;
        /* left: 0; */
        right: 20px;
        width: fit-content;
        background-color: white;
        border: 1px solid #ccc;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        z-index: 1231131;
        max-height: 200px;
        overflow-y: auto;
        padding: 10px;
        align-items: start;
        flex-direction: column;
    }
    

    .search-results ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .search-results li {
        padding: 10px;
        cursor: pointer;
        transition: background-color 0.2s;
    }

    .search-results li:hover {
        background-color: #f0f0f0;
    }

    .back_wrapper_buttons {
        display: flex;
        justify-content: space-between;
        flex-direction: row;
        align-items: center;
        gap: 30px;
    }

    .back_active {
        display: flex;
        gap: 20px;
        align-items: center;
    }

</style>