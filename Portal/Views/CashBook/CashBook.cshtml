@model Portal.Controllers.CashBookController.CashBookJson;

<table class="table-page-menu" style="margin-top: 10px; margin-bottom: 10px">
    <tbody>
        <tr>
            <td id="back" style="text-align:left; width:100px; cursor:pointer">
                <img src="/themes/clearmin/img/md/dark/keyboard-backspace.svg" height="38" width="24" style="cursor:pointer">
                <label style="margin-left:10px; cursor:pointer">назад</label>
            </td>

            <td>

                <select required id="cashBook_ttSelect" class="form-control selectors" data-width="100%" onchange="CashBook()">
                    @foreach (var item in Model.Locations.OrderBy(x => x.Name))
                    {
                        if(Model.Locations.Count > 1)
                        {
                            if (Model?.selectedLocation == item.RKCode)
                            {
                                <option selected value="@item.RKCode">@item.Name</option>
                            } else {
                                <option value="@item.RKCode">@item.Name</option>
                            }
                        } else {
                            <option selected disabled value="@item.Guid">@item.Name</option>
                        }
                    }
                </select>
            </td>
        </tr>
    </tbody>
</table>

<div class="cahsBook_Wrapper">

    <div class="cashBook_topPanel">
        <div class="topPanel_entryBlock">
            <div class="block_header">Отправка данных по списаниям</div>

            <form class="entryBlock_form" onsubmit="sendData(event)">
                <div>
                    <label class="label-light" for="cash">Остаток</label>
                    <input step="0.01" required type="number" class="form-control" placeholder="Введите сумму остатка" name="cash" id="cash" value="">
                </div>

                <div>
                    <label class="label-light" for="incassCash">Инкассация</label>
                    <input step="0.01" type="number" class="form-control" placeholder="Введите сумму инкассации" id="incassCash" value="">
                </div>

                <div>
                    <label class="label-light" for="otherCash">Прочие списания</label>
                    <input step="0.01" type="number" class="form-control" placeholder="Введите сумму прочих списаний" name="otherCash" id="otherCash" value="">
                </div>

                <div class="entryBlock_buttonWrapper">
                    <button type="submit" class="btn btn-success">Отправить</button>
                </div>

            </form>

        </div>

        @if (User.IsInRole("cashBook_history") || User.IsInRole("cashBook_admin"))
        {
            <div class="topPanel_historyBlock">
                <div class="block_header">История внесенных значений</div>

                <div class="historyBlock_tableWrapper">
                    <table class="historyTable">
                        <thead>
                            <tr>
                                <th class="hiddenForMobile">Ответственный</th>
                                <th class="hiddenForMobile">ТТ</th>
                                <th>Остаток</th>
                                <th>Инкассация</th>
                                <th>Прочие списания</th>
                                <th>Дата</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach(var item in Model.cashBooks) 
                             { 
                                 <tr>
                                    <td class="hiddenForMobile">@item.User</td>
                                    <td class="hiddenForMobile">@Model.Locations.FirstOrDefault(x => x.RKCode == item.RKCode).Name</td>
                                    <td>@item.Cash.ToString("0.00")</td>
                                    <td>@item.Incass.ToString("0.00")</td>
                                    <td>@item.Other.ToString("0.00")</td>
                                    <td>@item.Date</td> 
                                 </tr> 
                             }
                        </tbody>
                    </table>
                </div>


            </div>
        } else {
            <div class="topPanel_historyBlock cashBook_blockedPanel">
                <img src="/themes/clearmin/img/padlock.png" />
            </div>
        }

    </div>

    @if(User.IsInRole("cashBook_admin"))
    {
        <div class="topPanel_historyBlock">
            <div class="block_header juds">Расчет отклонений ЖУДС <button onclick="GetSumSales()" class="btn btn-success">Запросить расчёт</button></div>

            <div class="historyBlock_tableWrapper">
                <table class="historyTable">
                    <thead>
                        <tr>
                            <th class="hiddenForMobile">ТТ</th>
                            <th>Дата</th>
                            <th>НО</th>
                            <th class="hiddenForMobile">Приход</th>
                            <th class="hiddenForMobile">Инкассация</th>
                            <th class="hiddenForMobile">Прочие</th>
                            <th>ККО</th>
                            <th>Факт</th>
                            <th>Отклонения</th>
                        </tr>
                    </thead>
                    <tbody id="CashBook_tBody">
                        
                    </tbody>
                </table>
            </div>
        </div>
     } else { 
         <div class="cashBook_bottomPanel cashBook_blockedPanel"> 
             <img src="/themes/clearmin/img/padlock.png" /> 
         </div> 
     }

</div>



<script>
   
    async function sendData(e) {
            e.preventDefault();
            const cash = document.getElementById("cash")
            const incassCash = document.getElementById("incassCash");
            const otherCash = document.getElementById("otherCash");

            if(cash.value == "") {cash.value = 0}
            if(incassCash.value == "") {incassCash.value = 0}
            if(otherCash.value == "") {otherCash.value = 0}

            const cashBook_ttSelect = document.getElementById("cashBook_ttSelect")
            if(cashBook_ttSelect)
            {
                tt = cashBook_ttSelect.value;
            }

            SpinnerShow();

            try {
                const res = await fetch(`/CashBook/CashBookAdd?cash=${cash.value}&incass=${incassCash.value}&other=${otherCash.value}&RKCode=${tt}`);
                
                $("#container-fluid").load("/CashBook/CashBook?tt=" + cashBook_ttSelect.value)

            } catch (error) {
                alert('Ошибка сети: ' + error.message);
            }

            SpinnerHide();

            incassCash.value = "";
            otherCash.value = "";
    }

    async function GetSumSales()
    {
         const cashBook_ttSelect = document.getElementById("cashBook_ttSelect")
            if(cashBook_ttSelect)
            {
                tt = cashBook_ttSelect.value;
            }

            SpinnerShow();

            try {
                const res = await fetch(`/CashBook/GetSumSales?tt=${tt}`);
                const json = await res.json();

                buildTable(json)

            } catch (error) {
                alert('Ошибка сети: ' + error.message);
            }

            SpinnerHide();

            incassCash.value = "";
            otherCash.value = "";
    }

    $("#PageHeader").text("ЖУДС")

    $('#back').unbind('click');
    $('#back').click(function () {
        SpinnerShow();
        location.hash = "#"
    });


    function buildTable(data) {

        const tBody = document.getElementById("CashBook_tBody")
        
        tBody.innerHTML = ""

        if(data.length == 0 || data.length == undefined)
        {
            tBody.innerHTML += `
                <tr>
                    <td colSpan='8'> Ранее данных не было занесено! </td>
                </tr>
            `

            return;
        }

        data.forEach(element => {
            tBody.innerHTML += `
                <tr>
                    <td class="hiddenForMobile">${element.tt}</td>
                    <td>${element.cashBooks.date.replace("T"," ").slice(0,19)}</td>
                    <td>${element.startMoney}</td>
                    <td class="hiddenForMobile">${element.sum}</td>
                    <td class="hiddenForMobile">${element.cashBooks.incass}</td>
                    <td class="hiddenForMobile">${element.cashBooks.other}</td>
                    <td>${element.mustBeMoney}</td>
                    <td>${element.cashBooks.cash}</td>
                    <td>${element.deviation}</td>
                </tr>
            `
        })
    }

    function CashBook() {
        const cashBook_ttSelect = document.getElementById("cashBook_ttSelect");
        $("#container-fluid").load("/CashBook/CashBook?tt=" + cashBook_ttSelect.value)
    }

  </script>