@model Portal.Models.MSSQL.Location.TTVersionsEdit
@{
    // загрузка модальных окошек в представление
    await Html.RenderPartialAsync("ModalWindows");

    var display = "";
    var disabled = "disabled";
    var formClass = "input-group";
    var blockStyle = "style=padding:30px;padding-top:10px;padding-bottom:20px"; // стиль блоков
    var openDate = "";
    var closeDate = "";
    var ttCode = "";
    var locVerName = "";
    var locVerRKCode = 0;
    var oldAddress = "";
    Portal.Models.MSSQL.Personality.Entity locVerEntity = null;
    var locVerOBD = "";
    Portal.Models.MSSQL.Location.LocationType locVerType = null;
    var guidNewBase = "0";
    var newAddress = "";
    var oldId = "";

    if(Model.LocationVersion != null)
    {
        if (Model?.LocationVersion[0]?.VersionStartDate != null)
        {
            openDate = Model.LocationVersion[0].VersionStartDate.Value.ToString("yyyy-MM-dd");
        }

        if (Model?.LocationVersion[0]?.VersionEndDate != null)
        {
            closeDate = Model.LocationVersion[0].VersionEndDate.Value.ToString("yyyy-MM-dd");
        }

        locVerName = Model.LocationVersion[0].Name;
        locVerRKCode = Model.LocationVersion[0].Location.RKCode;
        oldAddress = Model?.OldTT[0]?.Address;
        newAddress = Model.LocationVersion[0].Address;
        locVerEntity = Model.LocationVersion[0].Entity;
        locVerOBD = Model.LocationVersion[0].OBD.ToString();
        locVerType = Model?.LocationVersion[0].Location.LocationType;
        guidNewBase = Model?.LocationVersion[0]?.Guid.ToString();
        oldId = Model?.OldTT[0].Id.ToString();
    }
    else
    {
        guidNewBase = "0";
    }

    if (Model?.LocationVersion == null || Model?.original == "0")
    {
        display = "d-none";
        disabled = "";
        formClass = "form-group";
    }

    if(Model?.LocationVersion != null)
    {
        ttCode = $"value={@Model?.LocationVersion[0].Location.AggregatorsCode}";
    }
}

<div class="row flex bg-white" style="margin:0px">

    <!--данные тт-->
    <div class="col-md-4 col-lg-4" @blockStyle>
        <!--заголовок-->
        <h5 class="pull-left">Данные ТТ</h5>
        <!--разделитель-->
        <hr style="width:100%" />

        <!--имя тт-->
        <label class="label-light">имя тт</label>
        <div class="@formClass" style="margin-bottom:15px">
            <input id="ttName" type="text" class="form-control" value="@locVerName" style="font-weight:bold" @disabled>
            <span class="input-group-btn @display">
                <!--редактировать-->
                <button type="button" class="edit btn btn-default" onclick="Edit(this)"><i class="fa fa-fw fa-pencil"></i></button>
                <!--сохранить-->
                <button type="button" class="save btn btn-default d-none" onclick="Save(this)"><i class="fa fa-fw fa-save"></i></button>
                <!--сохранение...-->
                <button type="button" class="saving btn btn-default d-none"><i class="fa fa-fw fa-circle-o-notch rotating"></i></button>
                <!--отменить-->
                <button type="button" class="cancel btn btn-default d-none" onclick="Cancel(this)"><i class="fa fa-fw fa-close"></i></button>
            </span>
        </div>

        <!--код RK тт-->
        <label class="label-light">код RK</label>
        <div class="form-group" style="margin-bottom:15px">
            <input id="ttRestaurantSifr" type="number" class="form-control" value="@locVerRKCode" style="font-weight:bold" disabled>
            <span class="input-group-btn d-none">
                <!--редактировать-->
                <button type="button" class="edit btn btn-default" onclick="Edit(this)"><i class="fa fa-fw fa-pencil"></i></button>
                <!--сохранить-->
                <button type="button" class="save btn btn-default d-none" onclick="Save(this)" id="saveRestSifrButton"><i class="fa fa-fw fa-save"></i></button>
                <!--сохранение...-->
                <button type="button" class="saving btn btn-default d-none"><i class="fa fa-fw fa-circle-o-notch rotating"></i></button>
                <!--отменить-->
                <button type="button" class="cancel btn btn-default d-none" onclick="Cancel(this)"><i class="fa fa-fw fa-close"></i></button>
            </span>
        </div>

        <!--адрес тт-->
        <label class="label-light">адрес тт</label>
        <div class="@formClass" style="margin-bottom:15px">
            <input id="ttAddress" type="text" class="form-control" value="@newAddress" style="font-weight:bold" @disabled>
            <span class="input-group-btn @display">
                <!--редактировать-->
                <button type="button" class="edit btn btn-default" onclick="Edit(this)"><i class="fa fa-fw fa-pencil"></i></button>
                <!--сохранить-->
                <button type="button" class="save btn btn-default d-none" onclick="Save(this)"><i class="fa fa-fw fa-save"></i></button>
                <!--сохранение...-->
                <button type="button" class="saving btn btn-default d-none"><i class="fa fa-fw fa-circle-o-notch rotating"></i></button>
                <!--отменить-->
                <button type="button" class="cancel btn btn-default d-none" onclick="Cancel(this)"><i class="fa fa-fw fa-close"></i></button>
            </span>
        </div>

        <!--организация-->
        <div class="form-group">
            <label class="label-light" style="width:100%">организация</label>
            <div style="width:100%; float:left; margin-bottom:15px">
                <select id="ttOrganization" class="form-control selectors" data-width="100%">
                    <option></option>
                    @foreach (var organization in Model?.Entities.OrderBy(o => o.Name))
                    {
                        if (locVerEntity != null)
                        {
                            if (Model?.LocationVersion[0].Entity.Guid == organization.Guid)
                            {
                                <option selected="selected" value="@organization.Guid">@organization.Name</option>
                            }
                            else
                            {
                                <option value="@organization.Guid">@organization.Name</option>
                            }
                        }
                        else
                        {
                            <option value="@organization.Guid">@organization.Name</option>
                        }
                    }
                </select>
            </div>
                <!--редактировать-->
                <button type="button" class="edit btn btn-default" onclick="SelectChange($('#ttOrganization'))" style="float:left"><i class="fa fa-fw fa-pencil"></i></button>

                <!--сохранить-->
                <button type="button" class="save btn btn-default d-none" onclick="SaveSelect(this)" style="float:left"><i class="fa fa-fw fa-save"></i></button>

                <!--сохранение...-->
                <button type="button" class="saving btn btn-default d-none" style="float:left"><i class="fa fa-fw fa-circle-o-notch rotating"></i></button>

                <!--отменить-->
                <button type="button" class="cancel btn btn-default d-none" onclick="CancelSelect(this)" style="float:left"><i class="fa fa-fw fa-close"></i></button>
        </div>    

        <!--код тт-->        
        @if (Model?.LocationVersion == null)
        {
            ttCode = "";
        }

        <label class="label-light">код тт</label>
        <div class="@formClass" style="margin-bottom:15px">
            <input id="ttCode" type="number" class="form-control" @ttCode style="font-weight:bold" @disabled>
            <span class="input-group-btn @display">
                <!--редактировать-->
                <button type="button" class="edit btn btn-default" onclick="Edit(this)"><i class="fa fa-fw fa-pencil"></i></button>
                <!--сохранить-->
                <button type="button" class="save btn btn-default d-none" onclick="Save(this)"><i class="fa fa-fw fa-save"></i></button>
                <!--сохранение...-->
                <button type="button" class="saving btn btn-default d-none"><i class="fa fa-fw fa-circle-o-notch rotating"></i></button>
                <!--отменить-->
                <button type="button" class="cancel btn btn-default d-none" onclick="Cancel(this)"><i class="fa fa-fw fa-close"></i></button>
            </span>
        </div>

        <!--код обд-->
        <label class="label-light">код обд</label>
        <div class="@formClass" style="margin-bottom:15px">
            <input id="ttObd" type="number" class="form-control" value="@locVerOBD" style="font-weight:bold" @disabled>
            <span class="input-group-btn @display">
                <!--редактировать-->
                <button type="button" class="edit btn btn-default" onclick="Edit(this)"><i class="fa fa-fw fa-pencil"></i></button>
                <!--сохранить-->
                <button type="button" class="save btn btn-default d-none" onclick="Save(this)"><i class="fa fa-fw fa-save"></i></button>
                <!--сохранение...-->
                <button type="button" class="saving btn btn-default d-none"><i class="fa fa-fw fa-circle-o-notch rotating"></i></button>
                <!--отменить-->
                <button type="button" class="cancel btn btn-default d-none" onclick="Cancel(this)"><i class="fa fa-fw fa-close"></i></button>
            </span>
        </div>

        <!--тип тт-->
        <div class="form-group">
            <label class="label-light" style="width:100%">тип тт</label>
            <div style="width:100%; float:left">
                <select id="ttType" class="form-control selectors" data-width="100%">
                    <option></option>
                    @foreach (var type in Model?.locationTypes.OrderBy(t => t.Name))
                    {
                        if (locVerType != null)
                        {
                            if (locVerType.Guid == type.Guid)
                            {
                                <option selected="selected" value="@type.Guid">@type.Name</option>
                            }
                            else
                            {
                                <option value="@type.Guid">@type.Name</option>
                            }
                        }
                        else
                        {
                            <option value="@type.Guid">@type.Name</option>
                        }
                    }

                </select>
            </div>
            <!--редактировать-->
            <button type="button" class="edit btn btn-default" onclick="SelectChange($('#ttType'))" style="float:left"><i class="fa fa-fw fa-pencil"></i></button>

            <!--сохранить-->
            <button type="button" class="save btn btn-default d-none" onclick="SaveSelect(this)" style="float:left"><i class="fa fa-fw fa-save"></i></button>

            <!--сохранение...-->
            <button type="button" class="saving btn btn-default d-none" style="float:left"><i class="fa fa-fw fa-circle-o-notch rotating"></i></button>

            <!--отменить-->
            <button type="button" class="cancel btn btn-default d-none" onclick="CancelSelect(this)" style="float:left"><i class="fa fa-fw fa-close"></i></button>
        </div>


        <!--дата открытия-->
        <label class="label-light" style="margin-top: 15px;">дата открытия</label>
        <div class="@formClass" style="margin-bottom:15px">
            <input id="openDate" type="date" class="form-control" value="@openDate" style="font-weight:bold" @disabled>
            <span class="input-group-btn @display">
                <!--редактировать-->
                <button type="button" class="edit btn btn-default" onclick="Edit(this)"><i class="fa fa-fw fa-pencil"></i></button>
                <!--сохранить-->
                <button type="button" class="save btn btn-default d-none" onclick="Save(this)"><i class="fa fa-fw fa-save"></i></button>
                <!--сохранение...-->
                <button type="button" class="saving btn btn-default d-none"><i class="fa fa-fw fa-circle-o-notch rotating"></i></button>
                <!--отменить-->
                <button type="button" class="cancel btn btn-default d-none" onclick="Cancel(this)"><i class="fa fa-fw fa-close"></i></button>
            </span>
        </div>
            
            @if(Model?.LocationVersion != null)
            {
                <!--дата закрытия-->
                <label class="label-light">дата закрытия</label>
                <div class="divForClose" style="margin-bottom:15px">
                <input id="closeDate" type="date" class="form-control inputForClose" value="@Model?.LocationVersion[0]?.VersionEndDate?.ToString("yyyy-MM-dd")" style="font-weight:bold" disabled>

                @if(Model.LocationVersion[0].VersionEndDate.ToString() != "")
                {
                    <button class="btn btn-sm btn-success" onclick="openConfirm()">Открыть точку</button>
                }
                else
                {
                    <button class="btn btn-sm btn-danger" onclick="closeConfirm()">Закрыть точку</button>
                }
            </div>
            }
           
    </div>

    <!--пользователи-->
    <div class="col-md-4 col-lg-4" @blockStyle>
        <!--заголовок-->
        <h5 class="pull-left">Пользователи</h5>

        <!--разделитель-->
        <hr style="width:100%" />

        <!--селектор пользователей-->
        <div class="form-group">
            <label class="label-light" style="width:100%">селектор пользователей</label>
            <div style="width:100%; float:left">
                <select id="users" class="form-control selectors" data-width="100%" multiple="multiple">

                    @foreach (var user in Model?.Users)
                    {
                        if (Model?.OldTT[0].Users.FirstOrDefault(u => u.Id == user.Id) != null && Model?.LocationVersion != null)
                        {
                            <option selected="selected" value="@user.Id">@user.Name</option>
                        }
                        else
                        {
                            <option value="@user.Id">@user.Name</option>
                        }
                    }

                </select>
            </div>

            <!--сохранить-->
            <button type="button" class="save btn btn-default d-none" onclick="SaveSelect(this)" style="float:left"><i class="fa fa-fw fa-save"></i></button>

            <!--сохранение...-->
            <button type="button" class="saving btn btn-default d-none" style="float:left"><i class="fa fa-fw fa-circle-o-notch rotating"></i></button>

            <!--отменить-->
            <button type="button" class="cancel btn btn-default d-none" onclick="CancelSelect(this)" style="float:left"><i class="fa fa-fw fa-close"></i></button>
        </div>
    </div>

    <!--кассы, камеры, интеграции-->
    <div class="col-md-4 col-lg-4" @blockStyle>
        <!--кассы-->
        <h5 class="pull-left">Кассы</h5>
        <div class="pull-right" style="margin-right:0px; height:10px"><button class="btn btn-xs" style="margin-top: 13px" onclick="AddCash()">добавить</button></div>

        <!--разделитель-->
        <hr style="width:100%" />

        <!--список касс-->
        <div class="form-group">
            <label class="label-light" style="width:100%">подключенные кассы</label>
            <div id="cashes" style="width:100%; float:left">

                @foreach (var cash in Model?.OldTT[0].CashStations.OrderBy(n => n.Name))
                {
                    var id = "cash_" + cash.Id.ToString();
                    /*var idip = "caship_" + cash.Id;*/
                    <a href="#edit" class="list-group-item list-group-item-slim list-group-item-noaction" id="@id">
                        <div class="cashName" style="display:inline">@cash.Name</div>
                        <div class="cashIp hidden">@cash.Ip</div>
                        <div class="cashMidserver hidden">@cash.Midserver</div>
                        <div class="pull-right" style="margin-right:10px; height:10px"><label class="ico fa fa-fw fa-pencil" style="margin-top: -2px" onclick="EditCash(this)"></label></div>
                    </a>

                }

            </div>

            <!--сохранить-->
            <button type="button" class="save btn btn-default d-none" onclick="SaveSelect(this)" style="float:left"><i class="fa fa-fw fa-save"></i></button>

            <!--сохранение...-->
            <button type="button" class="saving btn btn-default d-none" style="float:left"><i class="fa fa-fw fa-circle-o-notch rotating"></i></button>

            <!--отменить-->
            <button type="button" class="cancel btn btn-default d-none" onclick="CancelSelect(this)" style="float:left"><i class="fa fa-fw fa-close"></i></button>
        </div>

        <!--камеры-->
        <h5 class="pull-left" style="margin-top:50px">Камеры</h5>
        <div class="pull-right" style="margin-right:0px; height:10px"><button class="btn btn-xs" style="margin-top: 53px" onclick="CamEdit()">изменить</button></div>        

        <!--разделитель-->
        <hr style="width:100%" />

        <!--список камер-->
        <div class="form-group">
            <label class="label-light" style="width:100%">подключенные камеры</label>
            <div id="cameras" style="width:100%; float:left">
                @if (Model?.LocationVersion != null)
                {
                    @foreach (var cam in Model.OldTT[0].NxCameras.OrderBy(c => c.Name))
                    {
                        <div id="@cam.Id" class="list-group-item list-group-item-slim list-group-item-noaction">
                            <div style="display:inline">@cam.Name</div>
                            <div class="pull-right" style="margin-right:10px; height:10px"><label class="ico fa fa-fw fa-pencil" style="margin-top: -2px" onclick="EditCamProps(this)"></label></div>
                        </div>
                    }
                }
                

            </div>

            <!--сохранить-->
            <button type="button" class="save btn btn-default d-none" onclick="SaveSelect(this)" style="float:left"><i class="fa fa-fw fa-save"></i></button>

            <!--сохранение...-->
            <button type="button" class="saving btn btn-default d-none" style="float:left"><i class="fa fa-fw fa-circle-o-notch rotating"></i></button>

            <!--отменить-->
            <button type="button" class="cancel btn btn-default d-none" onclick="CancelSelect(this)" style="float:left"><i class="fa fa-fw fa-close"></i></button>
        </div>

         <!--интеграции-->
        <h5 class="pull-left" style="margin-top:50px">Интеграции</h5>        

        <!--разделитель-->
        <hr style="width:100%; margin-bottom: 15px;" />

        <!--яндекс еда-->
        <div class="pull-right" style="padding-bottom:10px; width:100%">
            <label id="switchLabel" style="margin-right:15px">Яндекс Еда</label>
            <div class="material-switch pull-right">
                @if (Model?.LocationVersion != null)
                {
                    <input class="slider" id="yandexEda" type="checkbox" checked="@Model?.OldTT[0].YandexEda">
                }
                else
                {
                    <input class="slider" id="yandexEda" type="checkbox">
                }
                <label for="yandexEda" class="label-warning"></label>
            </div>
        </div>

        <!--деливери клаб-->
        <div class="pull-right" style="padding-bottom:10px; width:100%">
            <label id="switchLabel" style="margin-right:15px">Delivery Club</label>
            <div class="material-switch pull-right">
                @if (Model?.LocationVersion != null)
                {
                    <input class="slider" id="deliveryClub" type="checkbox" checked="@Model?.OldTT[0].DeliveryClub">
                }
                else
                {
                    <input class="slider" id="deliveryClub" type="checkbox">
                }
                
                <label for="deliveryClub" class="label-warning"></label>
            </div>
        </div>

    </div>

    <!--кнопки сохранить/отмена-->
    @if (Model.TTNew)
    {
        blockStyle += ";width:100%";
        <div class="col-12" @blockStyle>
            <button type="button" class="btn btn-sm btn-success default" style="margin-right:20px" onclick="SaveNewItem()">Сохранить</button>
            <button type="button" class="btn btn-sm btn-light default" onclick="DataTable()">Отмена</button>
        </div>
    }

</div>


<!--модальное окно: добавление кассы-->
<div id="addCashModal" class="modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">

            <!--заголовок-->
            <div class="modal-header">
                <div class="pull-right" style="margin-right:10px; height:10px"><label class="ico md-close" style="margin-top: -2px" data-dismiss="modal"></label></div>
                <h4 class="modal-title" id="myModalLabel">
                    добавление кассы
                    <a class="anchorjs-link" href="#myModalLabel"><span class="anchorjs-icon"></span></a>
                </h4>
            </div>

            <!--содержимое-->
            <div class="modal-body">
                <form class="form-horizontal">

                    <!--ip адрес-->
                    <label for="cashIp" class="col-sm-4 control-label">ip адрес</label>
                    <div class="input-group col-sm-5">
                        <input type="text" class="form-control" id="cashIp" placeholder="0.0.0.0">
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-default" onclick="cashConnect()"><i class="fa fa-fw fa-plug"></i></button>
                        </span>
                    </div>

                    <!--ожидание загрузки-->
                    <div class="input-group col-sm-12 hidden" id="cashLoading">
                        <p class="color-red" style="text-align:center; font-weight:bold; margin-top:10px">подключение к кассе...</p>
                    </div>

                    <!--имя кассы-->
                    <div id="nameForm">
                        <br />
                        <label for="cashName" class="col-sm-4 control-label">имя кассы</label>
                        <div class="input-group col-sm-5">
                            <input type="text" class="form-control" id="cashName">
                        </div>
                    </div>

                    <!--Midserver-->
                    <div id="midserverForm">
                        <br />
                        <label for="midserver" class="col-sm-4 control-label">Midserver(RK7)</label>
                        <div class="input-group col-sm-5">
                            <input type="text" class="form-control" id="midserver">
                        </div>
                    </div>

                    <!--ID ресторана-->
                    <div id="restForm">
                        <br />
                        <label for="restSifr" class="col-sm-4 control-label">ID ресторана(RK7)</label>
                        <div class="input-group col-sm-5">
                            <input type="text" class="form-control" id="restSifr">
                        </div>
                    </div>

                </form>
            </div>

            <!--кнопки-->
            <div class="modal-footer">
                <button id="deleteCash" type="button" class="btn btn-sm btn-danger" onclick="deleteCash()" style="float:left">удалить</button>
                <button id="saveCash" type="button" class="btn btn-sm btn-success" onclick="saveCash()">добавить</button>
                <button id="changeCash" type="button" class="btn btn-sm btn-success" onclick="changeCash()">сохранить</button>
                <button type="button" class="btn btn-sm btn-default" data-dismiss="modal">отмена</button>
            </div>

        </div>
    </div>
</div>

<!--модальное окно: добавление камер-->
<div id="camModal" class="modal" tabindex="-1" role="dialog" aria-labelledby="camModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog" style="width:80%">
        <div class="modal-content" style="height:90vh">

            <!--заголовок-->
            <div class="modal-header">
                <div class="pull-right" style="margin-right:10px; height:10px"><label class="ico md-close" style="margin-top: -2px" data-dismiss="modal"></label></div>
                <h4 class="modal-title" id="camModalLabel">
                    Камеры на ТТ
                    <a class="anchorjs-link" href="#camModalLabel"><span class="anchorjs-icon"></span></a>
                </h4>
            </div>

            <!--содержимое-->
            <div id="camBody" class="modal-body bg-gray" style="height:calc(100% - 130px)">

            </div>

            <!--кнопки-->
            <div class="modal-footer" style="position:absolute; bottom:10px; width:100%">
                <button type="button" class="btn btn-sm btn-default" data-dismiss="modal" >закрыть</button>
            </div>

        </div>
    </div>
</div>

<!--модальное окно: редактирования свойств камеры-->
<div id="camPropsModal" class="modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">

            <!--заголовок-->
            <div class="modal-header">
                <div class="pull-right" style="margin-right:10px; height:10px"><label class="ico md-close" style="margin-top: -2px" data-dismiss="modal"></label></div>
                <h4 class="modal-title" id="myModalLabel">
                    настройка камеры
                    <a class="anchorjs-link" href="#myModalLabel"><span class="anchorjs-icon"></span></a>
                </h4>
            </div>

            <!--содержимое-->
            <div class="modal-body">
                <form class="form-horizontal">
                   
                    <!--ожидание загрузки-->
                    <div class="input-group col-sm-12 hidden" id="cashLoading">
                        <p class="color-red" style="text-align:center; font-weight:bold; margin-top:10px">подключение к кассе...</p>
                    </div>

                    <!--имя камеры-->
                    <div id="camNameForm">
                        <br />
                        <label for="camName" class="col-sm-4 control-label">имя камеры</label>
                        <div class="input-group col-sm-5">
                            <input type="text" class="form-control" id="camName" disabled>
                        </div>
                    </div>

                    <br />

                    <!--группа камер-->                  
                    <label for="camGroupSelector" class="col-sm-4 control-label">группа</label>
                    <div class="input-group col-sm-5">
                        <select id="camGroupSelector" class="form-control" >
                            
                        </select>
                    </div>

                </form>
            </div>

            <!--кнопки-->
            <div class="modal-footer">
                <button id="changeCash" type="button" class="btn btn-sm btn-success" onclick="SaveCamProps()">сохранить</button>
                <button type="button" class="btn btn-sm btn-default" data-dismiss="modal">отмена</button>
            </div>

        </div>
    </div>
</div>

<!----------------------------скрипты----------------------------------->
<!--переменные-->
<script>
    var divForButtonLocVer = document.getElementById('divForButtonLocVer')
    var newTT = @Html.Raw(Json.Serialize(Model?.TTNew));
    var ttId = "@Model.TTNew";
    var ttGuid = "@guidNewBase";
    if (ttId == "False") {
        ttId = @Model?.OldTT[0].Id;
    }
    var original = "@Model?.original";
    
    var ttRkSifr = @Model?.OldTT[0].Restaurant_Sifr;
    var mode = '';
    var ttCams = [];
    var camId = 0;
    var oldId = "@oldId";
</script>

<!--пользователи-->
<script>
    $('#users').select2({
        theme: "bootstrap4",
        language: "ru",
        closeOnSelect: false,
        placeholder: "выберите пользователей..."
    });
</script>

<!--тип тт-->
<script>
    $('#ttType').select2({
        theme: "bootstrap4",
        language: "ru",
        closeOnSelect: true,
        placeholder: "выберите тип..."
    });

    if (!newTT) {
        $('#ttType').parent().css('width', 'calc(100% - 43px)');
        $("#ttType").prop("disabled", true);
    }
    else {
        $("#ttType").parent().parent().find('.edit').addClass('d-none');
    }
</script>

<!--организация-->
<script>
    $('#ttOrganization').select2({
        theme: "bootstrap4",
        language: "ru",
        closeOnSelect: false,
        placeholder: "выберите организацию..."
    });

    if (!newTT) {
        $('#ttOrganization').parent().css('width', 'calc(100% - 43px)');
        $("#ttOrganization").prop("disabled", true);
    }
    else {
        $("#ttOrganization").parent().parent().find('.edit').addClass('d-none');
    }
</script>

<!--изменение данных в селекторах-->
<script>
    // события изменения в селекторах
    $('.selectors').on('select2:select', function (e) { SelectChange(this) });
    $('.selectors').on('select2:unselect', function (e) { SelectChange(this) });

    // изменение набора выделенных элементов в селекторе
    function SelectChange(selector) {

        if (!newTT) {
            // определяем элементы
            var multiple = $(selector).prop('multiple');
            var selId = '#' + $(selector).prop('id');
            var selCont = $(selector).parent();
            var edit = $(selector).parent().parent().find('.edit');
            var save = $(selector).parent().parent().find('.save');
            var cancel = $(selector).parent().parent().find('.cancel');

            // одиночные селекторы
            if (!multiple) {
                $(selector).prop("disabled", false);
                edit.addClass('d-none');
            }

            // включаем кнопки
            $(save).removeClass('d-none');
            $(cancel).removeClass('d-none');

            $(selCont).css('width', 'calc(100% - 86px)');
        }
    }

    // кнопка сохранить
    function SaveSelect(save) {
        var cancel = $(save).parent().find('.cancel');
        var edit = $(save).parent().find('.edit');
        var spinner = $(save).parent().find('.saving');

        var selector = $(save).parent().find('select');
        var multiple = $(selector).prop('multiple');
        var selCont = $(selector).parent();
        var selectId = $(selector).prop('id');
    
        // убираем кнопку "отмена"
        $(cancel).addClass('d-none');

        // включаем спиннер на кнопке
        $(save).addClass('d-none');
        $(spinner).removeClass('d-none');

        // отправляем данные в контроллер
        var tt = {};
        let ttId = "";
        if ("@Model.OldTT.Count()" == 1) {
            ttId = "@Model.OldTT[0].Id";
        } else {
            ttId = "0"
        }
        tt.id = ttId;
        tt.attribute = selectId;
        tt.Guid = "@guidNewBase";
        tt.items = [];
        var data = $(selector).select2('data');

        $(data).each(function () {
            var item = {};
            if (isNaN(this.id)) {
                item.guidOrg = this.id;
            } else {
                item.id = this.id;
            }
            item.text = this.text;
            tt.items.push(item);
        });
        
        var ttjsn = JSON.stringify(tt);
        ttjsn = ttjsn.replace(/ /g, "%bkspc%"); //экранирование пробелов

        $.ajax({
            type: "POST",
            url: '/Settings_TT/TTSave',
            data: { ttjsn: ttjsn },
            datatype: "text",
            success: function (result) {

                if (result.ok) {
                    // выключаем спиннер на кнопке
                    $(spinner).addClass('d-none');

                    // скрываем кнопки
                    $(save).addClass('d-none');
                    $(cancel).addClass('d-none');

                    // меняем ширину селектора
                    $(selCont).css('width', '100%');

                    // получаем коллекцию ваыбранных элементов из бд (контроль)
                    SelectItems(ttId, selectId, ttGuid);

                    // включаем кнопку редактировать
                    if (!multiple) {
                        selector.parent().css('width', 'calc(100% - 43px)');
                        $(edit).removeClass('d-none');
                        selector.prop("disabled", true);
                    }
                }
                else {
                    ShowModal('Редактор ТТ', result.data);

                    // выключаем спиннер на кнопке и возвращаем кнопки
                    $(spinner).addClass('d-none');
                    $(save).removeClass('d-none');
                    $(cancel).removeClass('d-none');
                }
            },
            error: function (error) { ShowModal('Редактор ТТ', error.responseText); }
        });

    }

    // кнопка отмена
    function CancelSelect(cancel) {
        var save = $(cancel).parent().find('.save');
        var edit = $(cancel).parent().find('.edit');

        var selector = $(cancel).parent().find('select');
        var multiple = $(selector).prop('multiple');
        var selCont = $(selector).parent();
        var selectId = $(selector).prop('id');

        // получаем коллекцию ваыбранных элементов из бд
        SelectItems(ttId, selectId, ttGuid);

        $(save).addClass('d-none');
        $(cancel).addClass('d-none');
        $(selCont).css('width', '100%');

        // включаем кнопку редактировать
        if (!multiple) {
            $(selCont).css('width', 'calc(100% - 43px)');
            $(edit).removeClass('d-none');
            selector.prop("disabled", true);
        }
    }

    // получение коллекций данных
    function SelectItems(ttId, selectId, ttGuid) {

        // снимаем выделение со всех элементов
        $('#' + selectId + ' option').each(function () {
            $(this).prop('selected', false);
        });

        // получаем данные из контроллера
        $.get('/Settings_TT/GetTTItems?ttId=' + ttId + '&selectId=' + selectId + '&ttGuid=' + ttGuid, function (selectedItems) {
            $(selectedItems).each(function () {
                if (selectId = 'ttOrganization') {
                    $('#' + selectId + ' option[value=' + this.guid + ']').prop('selected', true);
                } else {
                    $('#' + selectId + ' option[value=' + this.id + ']').prop('selected', true);
                }
                
            });

            // ре-инициализируем select2
            var selector = $('#' + selectId).select2();
            selector.select2({
                theme: "bootstrap4",
                width: "resolve",
                language: "ru",
                closeOnSelect: false,
                placeholder: "выберите..."
            });
        });
    }

</script>

<!--изменение данных тт-->
<script>
    var oldValue = "";
    // кнопка редактировать справа
    function Edit(edit) {
        // получаем текущие элементы
        var save = $(edit).parent().find('.save');
        var cancel = $(edit).parent().find('.cancel');
        var input = $(edit).parent().parent().children('input');

        oldValue = $(input).val();

        // меняем кнопки
        $(edit).addClass('d-none');
        $(save).removeClass('d-none');
        $(cancel).removeClass('d-none');

        // активируем поле ввода и ставим туда курсос
        $(input).prop('disabled', false);
        $(input).focus();
    }

    // кнопка сохранить справа
    function Save(save) {
        // определяем текущие элементы
        var input = $(save).parent().parent().children('input');
        var edit = $(save).parent().find('.edit');
        var cancel = $(save).parent().find('.cancel');
        var spinner = $(save).parent().children('.saving');

        // убираем кнопку "отмена"
        $(cancel).addClass('d-none');

        // включаем спиннер на кнопке
        $(save).addClass('d-none');
        $(spinner).removeClass('d-none');

        // отправляем данные в контроллер
        var tt = {};
        tt.type = $('#ttType').select2('val');
        let ttId = "";
        if ("@Model.OldTT.Count()" == 1) {
            ttId = "@Model.OldTT[0].Id";
        } else {
            ttId = "0"
        }
        tt.id = ttId;
        tt.Guid = ttGuid;
        tt.attribute = $(input).attr('id');
        tt.Organization = $('#ttOrganization').val();
        tt.name = $('#ttName').val();
        tt.restaurant_Sifr = $('#ttRestaurantSifr').val();
        tt.address = $('#ttAddress').val();
        tt.code = $('#ttCode').val();
        tt.obd = $('#ttObd').val();
        tt.openDate = $('#openDate').val();
        tt.closeDate = $('#closeDate').val();
        
        var ttjsn = JSON.stringify(tt);
        ttjsn = ttjsn.replace(/ /g, "%bkspc%"); //экранирование пробелов
        $.ajax({
            async: "false",
            type: "POST",
            url: '/Settings_TT/TTSave',
            data: { ttjsn: ttjsn },
            datatype: "text",
            success: function (result) {
                if (result.ok) {
                    // выключаем спиннер на кнопке
                    $(spinner).addClass('d-none');

                    // меняем кнопку сохранить на кнопку редактировать
                    $(save).addClass('d-none');
                    $(edit).removeClass('d-none');

                    // блокируем поле ввода
                    $(input).prop('disabled', true);

                    // обновляем заголовок страницы
                    $('#header').text(tt.name);
                }
                else {
                    ShowModal('Редактор ТТ', result.data);

                    // выключаем спиннер на кнопке и возвращаем кнопки
                    $(spinner).addClass('d-none');
                    $(save).removeClass('d-none');
                    $(cancel).removeClass('d-none');
                }
            },
            error: function (error) { ShowModal('Редактор ТТ', error.responseText); }
        });
        
    }

    function SaveCloseTT() {
        var input = $('#closeDate');

        var tt = {};
        tt.type = $('#ttType').select2('val');
        let ttId = "";
            if ("@Model.OldTT.Count()" == 1) {
                ttId = "@Model.OldTT[0].Id";
            } else {
                ttId = "0"
            }
            tt.id = ttId;
        tt.Guid = ttGuid;
        tt.attribute = $(input).attr('id');
        tt.Organization = $('#ttOrganization').val();
        tt.name = $('#ttName').val();
        tt.restaurant_Sifr = $('#ttRestaurantSifr').val();
        tt.address = $('#ttAddress').val();
        tt.code = $('#ttCode').val();
        tt.obd = $('#ttObd').val();
        tt.openDate = $('#openDate').val();
        tt.closeDate = $('#closeDate').val();

        var ttjsn = JSON.stringify(tt);
        ttjsn = ttjsn.replace(/ /g, "%bkspc%"); //экранирование пробелов
        $.ajax({
            async: "false",
            type: "POST",
            url: '/Settings_TT/TTSave',
            data: { ttjsn: ttjsn },
            datatype: "text",
            success: function (result) {
                if (result.ok) {
                    $('#header').text(tt.name);
                }
                else {
                    ShowModal('Редактор ТТ', result.data);
                }
            },
            error: function (error) { ShowModal('Редактор ТТ', error.responseText); }
        });
    }
    // кнопка отмена справа
    function Cancel(cancel) {
        // получаем текущие элементы
        var save = $(cancel).parent().find('.save');
        var edit = $(cancel).parent().find('.edit');
        var input = $(cancel).parent().parent().children('input');

        // меняем кнопки
        $(edit).removeClass('d-none');
        $(save).addClass('d-none');
        $(cancel).addClass('d-none');

        // блокируем поле ввода
        $(input).val(oldValue);
        $(input).prop('disabled', true);

    }

</script>

<!--сохранить новую тт-->
<script>
    function SaveNewItem() {
        if (document.getElementById('divForButtonLocVer')) {
            divForButtonLocVer.remove();
        }
        var tt = {};
        tt.Guid = ttGuid ?? "0";
        if (tt.Guid != "0")
        {
            tt.original = "1";
        }
        tt.name = $('#ttName').val();
        tt.address = $('#ttAddress').val();
        tt.code = $('#ttCode').val();
        tt.obd = $('#ttObd').val();
        tt.openDate = $('#openDate').val();
        tt.closeDate = $('#closeDate').val();
        tt.restaurant_Sifr = $('#ttRestaurantSifr').val();
        let ttId = "";
        if ("@Model.OldTT.Count()" == 1) {
            ttId = "@Model.OldTT[0].Id";
        } else {
            ttId = "0"
        }
        tt.id = ttId;

        tt.users = DataFromSelector($('#users'));
        tt.type = $('#ttType').select2('val');
        tt.organization = $('#ttOrganization').select2('val');        

        tt.yandexEda = $('#yandexEda').prop('checked');
        tt.deliveryClub = $('#deliveryClub').prop('checked');

        tt.cashes = [];
        
        $('#cashes').children('a').each(function () {
            var cashId = $(this).attr('id');
            cashId = cashId.substr(5, cashId.length - 5);

            var cashName = $(this).children('.cashName').text();
            var cashIp = $(this).children('.cashIp').text();
            var cashMidserver = $(this).children('.cashMidserver').text();

            var cash = {};
            cash.Id = cashId;
            cash.Name = cashName;
            cash.Ip = cashIp;
            cash.Midserver = cashMidserver;
            tt.cashes.push(cash);
        });

        tt.cameras = [];

        $('#cameras').children().each(function () {
            var camId = $(this).attr('id');
            var camName = $(this).text();            
            
            var cam = {};
            cam.Id = camId;
            cam.Name = camName;
            
            tt.cameras.push(cam);
        });
        

        var ttjsn = JSON.stringify(tt);
        ttjsn = ttjsn.replace(/ /g, "%bkspc%"); //экранирование пробелов

        $.ajax({
            type: "POST",
            url: '/Settings_TT/TTSave',
            data: { ttjsn: ttjsn },
            datatype: "text",
            success: function (result) {
                if (result.ok) {
                    if(tt.Guid != "0")
                    {
                        ShowModal('Редактор ТТ', 'Версия успешно добавлена');
                    }
                    else
                    {
                        ShowModal('Редактор ТТ', 'Торговая точка успешно добавлена');
                    }
                    
                    //DataTable();

                    $('#modalWindow').on('hidden.bs.modal', function () {

                        setTimeout(function () {
                            $('#modalWindow').remove();
                            DataTable();
                        }, 100);

                        $('#modalWindow').off('hidden.bs.modal');
                    });
                }
                else {
                    ShowModal('Редактор ТТ', result.data);
                }
            },
            error: function (error) { ShowModal('Редактор ТТ', error.responseText); }
        });
    }

    // получение данных в селекторах
    function DataFromSelector(selector) {
        var items = [];
        var data = $(selector).select2('data');

        $(data).each(function () {
            var item = {};
            if(isNaN(this.id)) {
                item.guid = this.id;
            } else {
                item.id = this.id;
            }
            item.text = this.text;
            items.push(item);
        });

        return items;
    }
</script>

<!--добавление кассы-->
<script>
    // вызов модального окна добавления кассы
    function AddCash() {
        mode = 'add';
        $("#cashIp").val(null);
        $("#cashName").val(null);

        $('#myModalLabel').text('добавление кассы');
        $('#saveCash').hide();
        $('#nameForm').hide();
        $('#restForm').hide();
        $('#midserverForm').hide();
        $('#changeCash').hide();
        $('#deleteCash').hide();

        $("#addCashModal").modal("show");
    }

    // кнопка модального окна добавить кассу
    function saveCash() {
        var cashIp = $("#cashIp").val();
        var cashName = $("#cashName").val();
        var cashMidserver = $('#midserver').val();
        var restaurantSifr = $('#restSifr').val();
        ttRkSifr = restaurantSifr;
        if (!cashIp) {
            alert('введите ip адресс кассы');
            return false;
        }

        if (!cashName) {
            alert('введите имя кассы');
            return false;
        }

        var id = "cash_" + "0";

        var newCashHtml = '<a href="#edit" class="list-group-item list-group-item-slim list-group-item-noaction" id="';
        newCashHtml += id + '">' + '<div class="cashName" style="display:inline">' + cashName + '</div>';
        newCashHtml += '<div class="cashIp hidden">' + cashIp + '</div>';
        newCashHtml += '<div class="cashMidserver hidden">' + cashMidserver + '</div>';
        newCashHtml += '<div class="pull-right" style="margin-right:10px; height:10px"><label class="ico fa fa-fw fa-pencil" style="margin-top: -2px" onclick="EditCash(this)"></label></div></a>';

        $('#cashes').append(newCashHtml);
        $('#ttRestaurantSifr').val(restaurantSifr); //добавляем значение в ячейку кода РК торговой точки
        SaveTTCashes('add'); 
        if(mode =='edit') { setTimeout(() => Save(document.getElementById('saveRestSifrButton')), 500); }//принудительно вызываем нажатие кнопки сохранить в ячейке кода РК торговой точки если мы редактируем данную ТТ
    }
</script>

<!--подключение к кассе и запрос названия-->
<script>
    function cashConnect() {
        var cashIp = $("#cashIp").val();
        $('#cashLoading').removeClass('hidden');

        $.get('/Settings_TT/GetCashName?cashIp=' + cashIp, function (result) {
            $('#cashLoading').addClass('hidden');

            if (result.ok) {
                $('#nameForm').show();
                $('#midserverForm').show();
                $('#restForm').show();
                var resultCash = JSON.parse(result.data)
                $('#restSifr').val(resultCash.Id);
                $('#cashName').val(resultCash.Name);
                $('#midserver').val(resultCash.Midserver);
                if (mode == 'add') {
                    $('#saveCash').show();
                    mode == '';
                }
            }
            else {
                alert(result.errorMessage);
            }
        });
    }
</script>

<!--редактирование кассы-->
<script>
    var oldName;
    var oldIp;

    // иконка "редактировать"
    function EditCash(el) {
        //var cashId = $(el).parent().parent().attr('id');
        //cashId = cashId.substr(5, cashId.length - 5);
        mode = 'edit';
        cashElement = $(el).parent().parent();
        var cashName = $(el).parent().parent().children('.cashName').text();
        var cashIp = $(el).parent().parent().children('.cashIp').text();
        var cashMidserver = $(el).parent().parent().children('.cashMidserver').text();
        EditCashModal(cashIp, cashName, cashMidserver);
    }

    // вызов модального окна редактирования кассы
    function EditCashModal(ip, name, midserver) {
        $("#cashIp").val(ip);
        $("#cashName").val(name);
        $("#midserver").val(midserver)
        $("#restSifr").val(ttRkSifr)
        $('#myModalLabel').text('редактирование кассы');
        $('#nameForm').show();
        $('#midserverForm').show();
        $('#restForm').show();
        $('#saveCash').hide();
        $('#changeCash').show();
        $('#deleteCash').show();
        $("#addCashModal").modal("show");
    }

    // кнопка модального окна сохранить кассу
    function changeCash() {
      /*  oldName = cashElement.children('.cashName').text();
        oldIp = cashElement.children('.cashIp').text(); */
        ttRkSifr = $("#restSifr").val()
        $('#ttRestaurantSifr').val(ttRkSifr);
        cashElement.children('.cashMidserver').text($("#midserver").val());
        cashElement.children('.cashName').text($("#cashName").val());
        cashElement.children('.cashIp').text($("#cashIp").val());        
        cashElement.children()
        SaveTTCashes('edit');
        if (mode == 'edit') { setTimeout(() => Save(document.getElementById('saveRestSifrButton')), 500); }
    }

    function oldCashValues() {
        cashElement.children('.cashName').text(oldName);
        cashElement.children('.cashIp').text(oldIp);
    }

    // кнопка модального окна удалить кассу
    function deleteCash() {
        cashElement.remove();
        SaveTTCashes('delete');
    }

</script>

<!--запись изменений касс на точке в БД-->
<script>
    function SaveTTCashes(mode) {
        if (newTT) {
            $("#addCashModal").modal("hide");
            return false;
        }
        var tt = {};
        let ttId = "";
        if ("@Model.OldTT.Count()" == 1) {
            ttId = "@Model.OldTT[0].Id";
        } else {
            ttId = "0"
        }
        tt.id = ttId;
        tt.attribute = "cashes";
        tt.cashes = [];

        // список касс на точке
        $('#cashes').children('a').each(function () {
            var cashId = $(this).attr('id');
            cashId = cashId.substr(5, cashId.length - 5);

            var cashName = $(this).children('.cashName').text();
            var cashIp = $(this).children('.cashIp').text();
            var cashMidserver = $(this).children('.cashMidserver').text();
            var cash = {};
            cash.Id = cashId;
            cash.Name = cashName;
            cash.Ip = cashIp;
            cash.Midserver = cashMidserver
            tt.cashes.push(cash);
        });

        var ttjsn = JSON.stringify(tt);
        ttjsn = ttjsn.replace(/ /g, "%bkspc%"); //экранирование пробелов

        $.ajax({
            type: "POST",
            url: '/Settings_TT/TTSave',
            data: { ttjsn: ttjsn },
            datatype: "text",
            success: function (result) {
                if (result.ok) {
                    $("#addCashModal").modal("hide");
                }
                else {
                    ShowModal('Редактор ТТ', result.data);
                    if (mode == 'edit') {
                        oldCashValues();
                    }
                    if (mode == 'add') {
                        $('#cash_0').remove();
                    }
                }
            },
            error: function (error) {
                ShowModal('Редактор ТТ', error.responseText);
            }
        });
    }
</script>

<!--выключатель Яндекс Еда-->
<script>
    $('#yandexEda').change(function () {
        var enabled = $(this).is(':checked');
        if (!newTT) {
            // отправляем данные в контроллер
            var tt = {};
            let ttId = "";
            if ("@Model.OldTT.Count()" == 1) {
                ttId = "@Model.OldTT[0].Id";
            } else {
                ttId = "0"
            }
            tt.id = ttId;
            tt.guid = ttGuid;
            tt.attribute = "yandexEda";
            tt.yandexEda = enabled;

            var ttjsn = JSON.stringify(tt);
            ttjsn = ttjsn.replace(/ /g, "%bkspc%"); //экранирование пробелов

            $.ajax({
                type: "POST",
                url: '/Settings_TT/TTSave',
                data: { ttjsn: ttjsn },
                datatype: "text",
                success: function (result) {
                    if (result.ok) {
                        
                    }
                    else {
                        ShowModal("Ошибка", result.data)
                    }
                },
                error: function (error) {
                    ShowModal("Ошибка", error.responseText)
                }
            });
        }
    });
</script>

<!--выключатель Delivery Club-->
<script>

    $('#deliveryClub').change(function () {
        var enabled = $(this).is(':checked');
        if (!newTT) {
            // отправляем данные в контроллер
            var tt = {};
            let ttId = "";
            if ("@Model.OldTT.Count()" == 1) {
                ttId = "@Model.OldTT[0].Id";
            } else {
                ttId = "0"
            }
            tt.id = ttId;
            tt.attribute = "deliveryClub";
            tt.guid = ttGuid;
            tt.deliveryClub = enabled;

            var ttjsn = JSON.stringify(tt);
            ttjsn = ttjsn.replace(/ /g, "%bkspc%"); //экранирование пробелов

            $.ajax({
                type: "POST",
                url: '/Settings_TT/TTSave',
                data: { ttjsn: ttjsn },
                datatype: "text",
                success: function (result) {
                    if (result.ok) {
                        
                    }
                    else {
                        ShowModal("Ошибка", result.data)
                    }
                },
                error: function (error) {
                    ShowModal("Ошибка", error.responseText)
                }
            });
        }
    });
</script>

<!--видеонаблюдение----------------------------------------------------------------------->
<!--кнопка изменить камеры-->
<script>
    function CamEdit() {
        $("#camModal").modal("show");
        TTcamsPreview();
    }
</script>

<!--превью с камер ТТ-->
<script>
    function TTcamsPreview() {
        $('#camBody').empty();
        let ttId = "";
        if("@Model.OldTT.Count()" == 1) {
            ttId = "@Model.OldTT[0].Id";
        } else {
            ttId = "0"
        }
        
        if (ttId != "0" && ttId != null && ttId != 'undefined' && ttId != "True") {
            $('#camBody').load('/Settings_TT/TTCamsPreview?ttId=' + ttId);
        }
        else {

            var jsn = JSON.stringify(ttCams); 
            jsn = jsn.replace(/\+/g, "%pp%");
            jsn = jsn.replace(/ /g, "%bkspc%");

            $('#camBody').load('/Settings_TT/TTCamsPreview?jsn=' + jsn);
        }
    }
</script>

<!--добавление камеры-->
<script>
    let ttId = "";
    if ("@Model.OldTT.Count()" == 1) {
        ttId = "@Model.OldTT[0].Id";
    } else {
        ttId = "0"
    }

    function AddCam() {
        $('#camBody').load('/Settings_TT/AddTTCam?ttId=' + ttId);
    }
</script>

<!--закрытие модального окна-->
<script>
    let ttId = "";
    if ("@Model.OldTT.Count()" == 1) {
        ttId = "@Model.OldTT[0].Id";
    } else {
        ttId = "0"
    }

    $("#camModal").on('hidden.bs.modal', function () {
        $('#cameras').empty();
        
        if (ttId != "0") {
            var camList = [];
            $.get('/Settings_TT/GetTTCams?ttId=' + ttId, function (ttCamList) {
                ttCamList.forEach(ttCamList => {
                    var cam = {};
                    cam.id = ttCamList.id;
                    cam.name = ttCamList.name;
                    camList.push(cam);                    
                });
                camListUpdate(camList);
            });
        }
        else {
            camList = ttCams;
            camListUpdate(camList);
        }
    });

    function camListUpdate(camList) {
        camList.forEach((elem) => {
            var camHtml = `<div id="${elem.id}" class="list-group-item list-group-item-slim list-group-item-noaction">`;
            camHtml += `<div style="display:inline">${elem.name}</div>`;
            camHtml += `<div class="pull-right" style="margin-right:10px; height:10px"><label class="ico fa fa-fw fa-pencil" style="margin-top: -2px" onclick="EditCamProps(this)"></label></div>`;
            camHtml += `</div>`;
            $('#cameras').append(camHtml);
        })
    };
</script>

<!--удаление камеры-->
<script>
    let ttId = "";
    if ("@Model.OldTT.Count()" == 1) {
        ttId = "@Model.OldTT[0].Id";
    } else {
        ttId = "0"
    }

    function CamDelete(camId, ttId, camGuid, el) {        
        if(camId == 0)
        {       
            $(el).parent().parent().parent().parent().remove();
             var temp = [];
             
             $.each(ttCams, function () {
                if (this.id != camGuid) {
                    temp.push(this);
                }
             });
             ttCams = temp;
        }
        else
        {
            $.get('/Settings_TT/RemoveCamFromTT?camId=' + camId + '&ttId=' + ttId, function (result) {
            if (result.ok) {
                $('#panel_' + camId).remove();
            }
            else {
                ShowModal('Редактор ТТ', result.data);
            }
        });
        }        
    }
</script>

<!--редактирование свойств камеры-->
<script>
    let ttId = "";
    if ("@Model.OldTT.Count()" == 1) {
        ttId = "@Model.OldTT[0].Id";
    } else {
        ttId = "0"
    }
    function EditCamProps(el)
    {
        camId = $(el).parent().parent().attr('id');

        var groupSelector = $('#camGroupSelector');
        groupSelector.empty();
        groupSelector.append(`<option selected disabled>выберите группу</option>`);

        // получаем данные камеры
        $.get(`/Settings_TT/GetCam?camId=${camId}`, function(cam)
        {
            $('#camName').val(cam.name);

            // получаем список групп камер в селектор
            $.get('/Settings_TT/GetCamGroupList', function(camGroupList) 
            {
                $.each(camGroupList, function(index, camGroup){
                    if (cam.camGroup != null) 
                    {                        
                        if (camGroup.id == cam.camGroup.id)
                        {
                            groupSelector.append(`<option value="${camGroup.id}" selected>${camGroup.name}</option>`);
                        }
                        else 
                        {
                            groupSelector.append(`<option value="${camGroup.id}">${camGroup.name}</option>`);
                        }
                        
                    }
                    else 
                    {
                        groupSelector.append(`<option value="${camGroup.id}">${camGroup.name}</option>`);
                    }
                                     
                });
            });  
        });  
                
        $("#camPropsModal").modal("show");
    }
    
    function SaveCamProps()
    {        
        var groupId = $('#camGroupSelector').val();
        $.get(`/Settings_TT/SaveCamProps?camId=${camId}&groupId=${groupId}`, function(result) 
        { 
            if (result.ok == true) 
            {
                $("#camPropsModal").modal("hide");
            }
            else 
            {
                ShowModal('Ошибка', result.errorMessage);
            }
        });
    }
</script>

<!---------------------------------------------------------------------------------------->
<!--подсказка кода тт при добавлении новой точки-->
<script>
    function GetNewTTCode()
    {        
        $.get('/Settings_TT/NewTTCode', function(newTTCode) 
        {
            $('#ttCode').attr('placeholder', newTTCode);
        });        
    }    
    GetNewTTCode();
</script>

<script>
    let hiddenForEditTT = document.querySelector('.hiddenForEditTT')
    hiddenForEditTT.classList.add('hidden')

    let headerDiv = document.getElementById('headMenu')
    if("@guidNewBase" != "0")
    {
        headerDiv.innerHTML += "<div id='divForButtonLocVer'><button id='buttonLocVer'> Посмотреть версии ТТ </button></div>"
    }
</script>


<script>
    var divForButtonLocVer = document.getElementById('divForButtonLocVer')
    let date;
    let closeDate;
    let locName = "";
    @{
        var checkparam = "0";
        var helper1 = "0";
        var guidLocation = "";
    }
    @if(Model?.LocationVersion?.Count > 0)
    {
        helper1 = "1";
        checkparam = Model?.LocationVersion[0]?.Name?.ToString();
        guidLocation = Model?.LocationVersion[0]?.Location?.Guid.ToString();
    }

    if (@helper1 == "1") {
        locName = "@Html.Raw(checkparam)"
    }
    if(@helper1 == "1")
    {
        $('#buttonLocVer').click(function () {
            divForButtonLocVer.remove();
            console.log()
            loadTTTableVersion('@guidLocation', locName)
        })
    } else {
        $('#buttonLocVer').click(function () {
            DataTable();
        })
    }
    

    if("@Model.TTNew" == "True" && "@Model.original" == "0"){
        $('#back').unbind('click');
        $('#back').click(function () {
            divForButtonLocVer.remove();
            let TTName = document.getElementById('ttName').value;
            loadTTTableVersion(locGuid, TTName);
        })
    } else {
            $('#back').unbind('click');
            $('#back').click(function () {
                DataTable();
                $('.addTTButton').attr("onClick", "AddItem()");
            })
    }

    // Закрытие точки
    function closeConfirm() {
        openModalQuestion("Закрыть точку?", "Закрыть ТТ")
        closeDate = document.querySelector('.divForClose').children[0];
    }

    // Открытие точки
    function openConfirm() {
        openModalQuestionOpen("Открыть точку?", "Открыть ТТ")
        closeDate = document.querySelector('.divForClose').children[0];
    }

    function clearCloseDate() {
        closeDate.value = '';
        closeModal()
        SaveCloseTT();
    }

    function getDateFromModal() {
        date = document.querySelector('.quizInput');
        if (date) {
            date = date.value;
            openModalYesNo("Вы уверены?", "Да", "Отмена")
        } else {
            closeModal()
        }
    }

    function YesOrNoModal() {
        closeDate.value = date;
        closeModal()
        SaveCloseTT();
    }
</script>