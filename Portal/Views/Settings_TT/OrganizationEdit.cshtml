@model Portal.Models.MSSQL.Location.EntityLocationModel
@{
    // загрузка модальных окошек в представление
    await Html.RenderPartialAsync("ModalWindows");

    var display = "";
    var disabled = "disabled";
    var formClass = "input-group";
    var blockStyle = "style=padding:30px;padding-top:10px;padding-bottom:20px"; // стиль блоков
    var yandexHost = Portal.Models.ApiRequest.Host + "/yandex/";
    var deliveryClubHost = Portal.Models.ApiRequest.Host + "/deliveryclub/";
}

<div class="row flex bg-white" style="margin:0px">

    <!--данные организации-->
    <div class="col-md-4 col-lg-4" @blockStyle>
        <!--заголовок-->
        <h5 class="pull-left">Данные организации</h5>

        <!--разделитель-->
        <hr style="width:100%" />

        <!--название-->
        <label class="label-light">название</label>
        <div class="@formClass" style="margin-bottom:15px">
            @if(Model?.New != 1)
            {
                <input id="orgName" type="text" class="form-control" value="@Model.Entities[0].Name" style="font-weight:bold">
            }
            else
            {
                <input id="orgName" type="text" class="form-control" value="" style="font-weight:bold" >
            }

            <label class="label-light pd-5" style="width:100%">принадлежность организации</label>
                <select id="owner" class="" data-width="100%">

                @if(Model.New == 1)
                {
                    <option value="1">Принадлежит</option>
                    <option value="0">Не принадлежит</option>
                }
                else
                {
                    if(@Model.Entities[0].Owner == 1)
                    {
                        <option value="1" selected>Принадлежит</option>
                        <option value="0">Не принадлежит</option>
                    }
                    else
                    {
                        <option value="1">Принадлежит</option>
                        <option value="0" selected>Не принадлежит</option>
                    }
                }


                </select>

            @*@if(!true)
            {
                <span class="input-group-btn @display">
                    <!--редактировать-->
                    <button type="button" class="edit btn btn-default" onclick="Edit(this)"><i class="fa fa-fw fa-pencil"></i></button>
                    <!--сохранить-->
                    <button type="button" class="save btn btn-default d-none" onclick="Save(this)"><i class="fa fa-fw fa-save"></i></button>
                    <!--сохранение...-->
                    <button type="button" class="saving btn btn-default d-none"><i class="fa fa-fw fa-circle-o-notch rotating"></i></button>
                    <!--отменить-->
                    <button type="button" class="cancel btn btn-default d-none" onclick="Cancel(this)"><i class="fa fa-fw fa-close"></i></button>
                </span>
            }*@
           
        </div>                                 

    </div>

    <!--торговые точки-->
    <div class="col-md-4 col-lg-4" @blockStyle>
        <!--заголовок-->
        <h5 class="pull-left">Торговые точки</h5>

        <!--разделитель-->
        <hr style="width:100%" />

        <!--селектор точек-->
        <div class="form-group">
            <label class="label-light" style="width:100%">селектор тт</label>
            <div style="width:100%; float:center">
                <select id="tts" class="form-control selectors" data-width="100%" multiple="multiple" disabled>

                    @if(Model.LocationVersions != null)
                    {
                        @foreach (var tt in Model.LocationVersions.OrderBy(t => t.Name))
                        {
                            if(Model?.New != 1)
                            {
                                if (Model.Entities[0]?.Guid == tt.Entity?.Guid)
                                {
                                    <option selected="selected" value="@tt.Guid">@tt.Name</option>
                                }
                            }
                            else 
                            {
                                <option value="@tt.Guid">@tt.Name</option>
                            }
                            
                        }
                    }
                    

                </select>
            </div>

            <!--сохранить-->
            <button type="button" class="save btn btn-default d-none" onclick="SaveSelect(this)" style="float:left"><i class="fa fa-fw fa-save"></i></button>

            <!--сохранение...-->
            <button type="button" class="saving btn btn-default d-none" style="float:left"><i class="fa fa-fw fa-circle-o-notch rotating"></i></button>

            <!--отменить-->
            <button type="button" class="cancel btn btn-default d-none" onclick="CancelSelect(this)" style="float:left"><i class="fa fa-fw fa-close"></i></button>
        </div>
    </div>

    <!--кнопки сохранить/отмена-->
    @if(true)
    {
        blockStyle += ";width:100%";
        <div class="col-12" @blockStyle>
            <button type="button" class="btn btn-sm btn-success default" style="margin-right:20px" onclick="SaveNewItem()">Сохранить</button>
            <button type="button" class="btn btn-sm btn-light default" onclick="DataTable()">Отмена</button>
        </div>
    }


        
    

</div>

<!----------------------------скрипты----------------------------------->
<!--переменные-->
<script>
    var newOrg;
    if ('@Model?.New' != 1) {
        newOrg = false
    }
    else
    {
        newOrg = true
    }
     
    var orgId;
    if ('@Model?.New' == 1)
    {
        orgId = "0";
    } 
    else 
    {
        orgId = "@Model?.Entities[0].Guid";
    }
</script>

<!--торговые точки-->
<script>
    $('#tts').select2({
        theme: "bootstrap4",
        language: "ru",
        closeOnSelect: false,
        placeholder: "выберите тт..."
    });
</script>

<!--изменение данных в селекторах-->
<script>
    // события изменения в селекторах
    $('.selectors').on('select2:select', function (e) { SelectChange(this) });
    $('.selectors').on('select2:unselect', function (e) { SelectChange(this) });

    // изменение набора выделенных элементов в селекторе
    function SelectChange(selector) {
        
        if (!newOrg) {

            // определяем элементы
            var multiple = $(selector).prop('multiple');
            var selId = '#' + $(selector).prop('id');
            var selCont = $(selector).parent();
            var edit = $(selector).parent().parent().find('.edit');
            var save = $(selector).parent().parent().find('.save');
            var cancel = $(selector).parent().parent().find('.cancel');

            // одиночные селекторы
            if (!multiple) {
                selector.prop("disabled", false);
                edit.addClass('d-none');
            }

            // включаем кнопки
            $(save).removeClass('d-none');
            $(cancel).removeClass('d-none');

            $(selCont).css('width', 'calc(100% - 86px)');
        }
    }

    // кнопка отмена
    function CancelSelect(cancel) {
        var save = $(cancel).parent().find('.save');
        var edit = $(cancel).parent().find('.edit');

        var selector = $(cancel).parent().find('select');
        var multiple = $(selector).prop('multiple');
        var selCont = $(selector).parent();
        var selectId = $(selector).prop('id');

        // получаем коллекцию ваыбранных элементов из бд
        SelectItems(orgId, selectId);

        $(save).addClass('d-none');
        $(cancel).addClass('d-none');
        $(selCont).css('width', '100%');

        // включаем кнопку редактировать
        if (!multiple) {
            $(selCont).css('width', 'calc(100% - 43px)');
            $(edit).removeClass('d-none');
            selector.prop("disabled", true);
        }
    }

    // получение коллекций данных
    function SelectItems(orgId, selectId) {

        // снимаем выделение со всех элементов
        $('#' + selectId + ' option').each(function () {
            $(this).prop('selected', false);
        });

        // получаем данные из контроллера
        $.get('/Settings_TT/GetOrganizationItems?Id=' + orgId + '&selectId=' + selectId, function (selectedItems) {
            $(selectedItems).each(function () {
                $('#' + selectId + ' option[value=' + this.id + ']').prop('selected', true);
            });

            // ре-инициализируем select2
            var selector = $('#' + selectId).select2();
            selector.select2({
                theme: "bootstrap4",
                width: "resolve",
                language: "ru",
                closeOnSelect: false,
                placeholder: "выберите..."
            });
        });
    }

</script>

<!--изменение данных организации-->
<script>
    var oldValue = "";
    // кнопка редактировать справа
    function Edit(edit) {
        // получаем текущие элементы
        var save = $(edit).parent().find('.save');
        var cancel = $(edit).parent().find('.cancel');
        var input = $(edit).parent().parent().children('input');

        oldValue = $(input).val();

        // меняем кнопки
        $(edit).addClass('d-none');
        $(save).removeClass('d-none');
        $(cancel).removeClass('d-none');

        // активируем поле ввода и ставим туда курсос
        $(input).prop('disabled', false);
        $(input).focus();
    }

    // кнопка сохранить справа
    function Save(save) {

        // определяем текущие элементы
        var input = $(save).parent().parent().children('input');
        var edit = $(save).parent().find('.edit');
        var cancel = $(save).parent().find('.cancel');
        var spinner = $(save).parent().children('.saving');

        // убираем кнопку "отмена"
        $(cancel).addClass('d-none');

        // включаем спиннер на кнопке
        $(save).addClass('d-none');
        $(spinner).removeClass('d-none');

        // отправляем данные в контроллер
        var organization = {};
        organization.Guid = orgId;
        organization.Name = $('#orgName').val();
        organization.Owner = $('#owner').val();
        
        var orgjsn = JSON.stringify(organization);
        orgjsn = orgjsn.replace(/ /g, "%bkspc%"); //экранирование пробелов
        $.ajax({
            type: "POST",
            url: '/Settings_TT/OrganizationSave',
            data: { orgjsn: orgjsn },
            datatype: "text",
            success: function (result) {
                if (result.ok) {
                    // выключаем спиннер на кнопке
                    $(spinner).addClass('d-none');
                    SpinnerHide();

                    // меняем кнопку сохранить на кнопку редактировать
                    $(save).addClass('d-none');
                    $(edit).removeClass('d-none');

                    // блокируем поле ввода
                    $(input).prop('disabled', true);

                    // обновляем заголовок страницы
                    $('#header').text(organization.Name);
                }
                else {
                    SpinnerHide();
                    ShowModal('Редактор организации', result.errorMessage);

                    // выключаем спиннер на кнопке и возвращаем кнопки
                    $(spinner).addClass('d-none');
                    $(save).removeClass('d-none');
                    $(cancel).removeClass('d-none');
                }
            },
            error: function (error) { ShowModal('Редактор организации', error.responseText); }
        });
    }

    // кнопка отмена справа
    function Cancel(cancel) {
        // получаем текущие элементы
        var save = $(cancel).parent().find('.save');
        var edit = $(cancel).parent().find('.edit');
        var input = $(cancel).parent().parent().children('input');

        // меняем кнопки
        $(edit).removeClass('d-none');
        $(save).addClass('d-none');
        $(cancel).addClass('d-none');

        // блокируем поле ввода
        $(input).val(oldValue);
        $(input).prop('disabled', true);
    }

</script>

<!--сохранить новую организацию-->
<script>
    function SaveNewItem() {

        var organization = {};
        organization.Guid = orgId;
        organization.Name = $('#orgName').val();
        organization.Owner = $('#owner').val();


        var orgjsn = JSON.stringify(organization);
        orgjsn = orgjsn.replace(/ /g, "%bkspc%"); //экранирование пробелов
        $.ajax({
            type: "POST",
            url: '/Settings_TT/OrganizationSave',
            data: { orgjsn: orgjsn },
            datatype: "text",
            success: function (result) {
                if (result.ok) {
                    if(@Model.New == 1)
                    {
                        ShowModal('Редактор орагнизации', 'Новая организация успешно добавлена');
                    }
                    else {
                        ShowModal('Редактор орагнизации', 'Изменения сохранены');
                    }
                    
                    //DataTable();

                    $('#modalWindow').on('hidden.bs.modal', function () {

                        setTimeout(function () {
                            $('#modalWindow').remove();
                            DataTable();
                        }, 100);

                        $('#modalWindow').off('hidden.bs.modal');
                    });
                }
                else {
                    ShowModal('Редактор организации', result.errorMessage);
                }
            },
            error: function (error) { ShowModal('Редактор организации', error); }
        });
    }

    // получение данных в селекторах
    function DataFromSelector(selector) {

        var items = [];
        var data = $(selector).select2('data');

        $(data).each(function () {

            var item = {};
            item.id = this.id;
            item.text = this.text;
            items.push(item);
        });

        return items;
    }
</script>
