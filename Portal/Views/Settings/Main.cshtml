@model Portal.Models.PortalSettings
<!--блок элементов сверху-->
<div class="row" style="margin-top: 0px; margin-bottom:10px">

    <!--Назад-->
    <a href="#settings" class="col-sm-1 el-marging" style="width:100px; cursor:pointer; color:black">
        <img src="~/themes/clearmin/img/md/dark/keyboard-backspace.svg" height="38" width="24"><label style="margin-left:10px; cursor:pointer">назад</label>
    </a>

</div>

<!--время сессии до выброса-->
<div class="row">
    <div class="col-sm-3" style="min-width: 300px;">
        <div class="panel panel-default"    style=" min-height: 190px;">
            <div class="panel-heading">настройки портала</div>
            <div class="panel-body" style="display: flex; flex-direction: column;">

                <div class="text-danger" asp-validation-summary="All"></div>

                <form class="" style="">

                    <!--время сессии в минутах-->
                    <div class="form-group">
                        <label for="session" class="col-sm-12 control-label">время сессии на портале в минутах</label>
                        <div class="col-sm-12">
                            <select class="form-control" id="session">
                                <option value="1">1 минута</option>
                                <option value="15">15 минут</option>
                                <option value="30">30 минут</option>
                                <option value="60">1 час</option>
                                <option value="120">2 часа</option>
                                <option value="240">4 часа</option>
                            </select>
                        </div>
                    </div>

                </form>
                <div style="display: flex; flex-direction: column; justify-content: center; align-items: center;">
                    <button type="button" class="btn btn-success btn-sm" style="width: 85px; margin-top: 15px" onclick="Save()">Сохранить</button>
                </div>
                
            </div>
        </div>
    </div>


    @if (User.IsInRole("analyst"))
    {
        <div class="col-sm-3" style="min-width: 300px">
            <div class="panel panel-default" style=" min-height: 190px;">
                <div class="panel-heading">обновление данных</div>
                <div class="panel-body" style="padding: 10px 10px">

                    <div class="text-danger" asp-validation-summary="All"></div>

                    <form class="" style="display: flex; justify-content: center; align-items: center; flex-direction: column; gap: 5px">

                        <label style="padding-left: 0px; margin-bottom: 0px" class="col-sm-12 control-label" for="refreshData_days"> Введите кол-во дней </label>
                        <input id="refreshData_days" class="form-control" style="text-align: center" value="7"/>

                        <button disabled id='buttonRefreshData' class="btn btn-success btn-sm" style="position: relative;margin-top: 10px;width: 88px; height: 34px; border-color: transparent; background-color: transparent" onclick="RefreshData(event)">

                            <div id="loading2" style="width: 40px; height: 38px" class="lds-ring center-block">
                                <div style="width: 24px; height: 24px;"></div>
                                <div style="width: 24px; height: 24px;"></div>
                                <div style="width: 24px; height: 24px;"></div>
                                <div style="width: 24px; height: 24px;"></div>
                            </div>

                            <span id="textButton" style="display: none"> Обновить </span>

                        </button>

                    </form>
                </div>
            </div>
        </div>
    }

    

</div>

<!----------------------------------------------------------------------------------------------------------------------------->
<!--сохранить-->
<script>
    function Save() {

        var settings = {};
        settings.SessionTime = $('#session').val();

        var jsn = JSON.stringify(settings);
        jsn = jsn.replace(/\+/g, "pp");
        
        $.ajax({
            type: "POST",
            url: '/Settings/SaveSettings',
            data: { json: jsn },
            datatype: "text",
            success: function (result) {
                alert(result);
            },
            error: function (error) { alert(error.responseText); }
        });
    }
</script>

<!--устанавливаем текущие значения в полях ввода-->
<script>
    // время сессии
    var session = @Html.Raw(Json.Serialize(Model.SessionTime));
    $('#session').val(session);
</script>


<!--по загрузке страницы-->
<script>
    $(document).ready(function () {
        $('#loading').hide();
    });
</script>

<script>
    const loading = document.getElementById('loading2')
    const textButton = document.getElementById('textButton')
    const button = document.getElementById('buttonRefreshData')

    async function RefreshData(event) {
        event.preventDefault()
        
        const days = document.getElementById('refreshData_days').value;
        const url = '/Settings/UpdateSaleObjects?daysAgo=' + days

        try {
            loading2.style.display = "block"
            textButton.style.display = "none"
            button.disabled = true;
            button.style.backgroundColor = "transparent"
            button.style.borderColor = "transparent"

            const response = await fetch(url)

            const result = await response.text();

            if(!response.ok) {
                throw new Error(result)
            }

            alert(result)

        } catch(e) {
            loading2.style.display = "none"
            textButton.style.display = "block"
            button.disabled = false;
            button.style.backgroundColor = "#2ECC71"
            button.style.borderColor = "#29B765"
            alert(e)
        }
    }

    async function CheckActiveUpdateSaleObjects() {

        const url = '/Settings/CheckStatusFromUpdateSaleObjects'

        try {
            const response = await fetch(url)
            const result = await response.text()

            if(!response.ok) {
                throw new Error(result)
            }

            loading2.style.display = "none"
            textButton.style.display = "block"
            button.disabled = false;
            button.style.backgroundColor = "#2ECC71"
            button.style.borderColor = "#29B765"

        }
        catch(e) {
            setTimeout(() => CheckActiveUpdateSaleObjects(), 60000)
        }
    }

    CheckActiveUpdateSaleObjects() 
</script>